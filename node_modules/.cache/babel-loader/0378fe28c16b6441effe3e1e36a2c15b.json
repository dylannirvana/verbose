{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/Reactdrag.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardBody, CardTitle, Input, InputGroup, Container, Row, Jumbotron } from 'reactstrap';\nimport Papa from 'papaparse';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Draggable from 'react-draggable';\n\nvar Reactdrag =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reactdrag, _Component);\n\n  function Reactdrag(props) {\n    var _this;\n\n    _classCallCheck(this, Reactdrag);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Reactdrag).call(this, props));\n    _this.state = {\n      data: []\n    }; // State holds gridorder / neworder\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateData = _this.updateData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Reactdrag, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      event.preventDefault();\n      var inventory = event.target.files[0];\n      Papa.parse(inventory, {\n        header: true,\n        complete: this.updateData\n      });\n    } // END\n\n  }, {\n    key: \"updateData\",\n    value: function updateData(results) {\n      var data = results.data;\n      console.log(data);\n      this.setState({\n        data: data\n      }); // {data:data}\n    } // renderData() {\n    //     return  this.state.data.length > 1 \n    //        ? this.state.data.map((item) => (  // Object in return \n    //             <Draggable >\n    //                 <Card className=\"grid-item\" key={item.sku} >\n    //                     <CardImg src={item.image} />\n    //                     <CardTitle> {item.sku} </CardTitle>\n    //                     <CardBody> {item.name} </CardBody>\n    //                 </Card>  \n    //             </Draggable>                                        \n    //        )) \n    //        : null   \n    // } //END renderData\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var renderData = this.state.data.map(function (item) {\n        return (// Object in return \n          React.createElement(Draggable, {\n            className: \"grid-item\",\n            key: item.sku,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, React.createElement(Card, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, React.createElement(CardImg, {\n            src: item.image,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }), React.createElement(CardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, \" \", item.sku, \" \"), React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, \" \", item.name, \" \")))\n        );\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Name:\", React.createElement(Input, {\n        type: \"file\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"album\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \" \", renderData, \" \"))));\n    }\n  }]);\n\n  return Reactdrag;\n}(Component); // END\n\n\nexport default Reactdrag;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/Reactdrag.js"],"names":["React","Component","Card","CardImg","CardBody","CardTitle","Input","InputGroup","Container","Row","Jumbotron","Papa","Draggable","Reactdrag","props","state","data","handleChange","bind","updateData","event","preventDefault","inventory","target","files","parse","header","complete","results","console","log","setState","renderData","map","item","sku","image","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { \n    Card, \n    CardImg, \n    CardBody,\n    CardTitle, \n    Input, \n    InputGroup, \n    Container, \n    Row, \n    Jumbotron \n    } from 'reactstrap';\nimport Papa from 'papaparse'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nimport Draggable from 'react-draggable'\n    \nclass Reactdrag extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {data: [] };  // State holds gridorder / neworder\n        this.handleChange = this.handleChange.bind(this);\n        this.updateData = this.updateData.bind(this)\n    }\n    \n    handleChange(event) {\n        event.preventDefault()\n        const inventory = event.target.files[0]\n        Papa.parse(inventory, {\n            header: true,\n            complete: this.updateData\n        })\n    } // END\n\n    updateData(results) {\n        const data = results.data\n        console.log(data)\n        this.setState({data}) // {data:data}\n    }\n    \n    // renderData() {\n    //     return  this.state.data.length > 1 \n    //        ? this.state.data.map((item) => (  // Object in return \n    //             <Draggable >\n    //                 <Card className=\"grid-item\" key={item.sku} >\n    //                     <CardImg src={item.image} />\n    //                     <CardTitle> {item.sku} </CardTitle>\n    //                     <CardBody> {item.name} </CardBody>\n    //                 </Card>  \n    //             </Draggable>                                        \n    //        )) \n    //        : null   \n\n    // } //END renderData\n\n    render() {\n        const renderData = this.state.data.map((item) => (  // Object in return \n            <Draggable className=\"grid-item\" key={item.sku}>\n                <Card  >\n                    <CardImg src={item.image} />\n                    <CardTitle> {item.sku} </CardTitle>\n                    <CardBody> {item.name} </CardBody>\n                </Card>  \n            </Draggable>                                        \n       )) \n\n        return (\n            <div>\n                <Jumbotron>\n                    <form >\n                        <InputGroup>\n                            Name:\n                            <Input type=\"file\" onChange={this.handleChange} />\n                        </InputGroup>\n                    </form>\n                </Jumbotron>\n                \n                <div className=\"album\">  \n                    <Container>           \n                        <Row className=\"grid\" > {renderData} </Row> \n                    </Container>                        \n\n                </div>\n            </div>          \n        );\n    }\n\n} // END\n\nexport default Reactdrag"]},"metadata":{},"sourceType":"module"}