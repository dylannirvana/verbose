{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/Parser/Parser.js\";\nimport React, { Component } from 'react';\nimport Papa from 'papaparse';\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Parser, _Component);\n\n  function Parser(props) {\n    var _this;\n\n    _classCallCheck(this, Parser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Parser).call(this, props));\n\n    _this.uploadHandler = function (e) {\n      e.preventDefault();\n      var inventory = e.target.files[0];\n      Papa.parse(inventory, {\n        header: true,\n        complete: function complete(results) {\n          var items = results.data;\n          console.log(items); // this.setState({ itemList: items })\n        }\n      });\n      console.log(_this.uploadhandler.items);\n    };\n\n    _this.state = {\n      itemList: []\n    };\n    _this.uploadHandler = _this.uploadHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Parser, [{\n    key: \"render\",\n    // END Parser\n    value: function render() {\n      // console.log(this.state) // this renders twice, once with [], then with object\n      // console.log(typeof(this.state))\n      // console.log(this.itemList)\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Daddyo\");\n    }\n  }]);\n\n  return Parser;\n}(Component);\n\nexport default Parser;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/Parser/Parser.js"],"names":["React","Component","Papa","Parser","props","uploadHandler","e","preventDefault","inventory","target","files","parse","header","complete","results","items","data","console","log","uploadhandler","state","itemList","bind"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;;AADiB,UAQrBC,aARqB,GAQL,UAACC,CAAD,EAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,SAAS,GAAGF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAlB;AAEAR,MAAAA,IAAI,CAACS,KAAL,CAAWH,SAAX,EAAsB;AACpBI,QAAAA,MAAM,EAAE,IADY;AAEpBC,QAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AAC1B,cAAMC,KAAK,GAAGD,OAAO,CAACE,IAAtB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAF0B,CAG1B;AACD;AANmB,OAAtB;AAQAE,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,aAAL,CAAmBJ,KAA/B;AAED,KAtBoB;;AAEjB,UAAKK,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGA,UAAKhB,aAAL,GAAqB,MAAKA,aAAL,CAAmBiB,IAAnB,uDAArB;AALiB;AAMlB;;;;AAgBD;6BAGO;AACP;AACA;AACA;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAMD;;;;EArCkBrB,S;;AAwCrB,eAAeE,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport Papa from 'papaparse'\n\nclass Parser extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        itemList: []\n      }\n      this.uploadHandler = this.uploadHandler.bind(this);\n    }\n\n  uploadHandler = (e) => {\n    e.preventDefault();\n    const inventory = e.target.files[0]\n\n    Papa.parse(inventory, {\n      header: true,\n      complete: function(results) {\n        const items = results.data;   \n        console.log(items)\n        // this.setState({ itemList: items })\n      } \n    })\n    console.log(this.uploadhandler.items)\n\n  } // END Parser\n\n  \n  render() {\n    // console.log(this.state) // this renders twice, once with [], then with object\n    // console.log(typeof(this.state))\n    // console.log(this.itemList)\n\n    return (\n      <div>\n       Daddyo\n       {/* { this.state.itemList } */}\n      </div>\n    )\n  }\n}\n\nexport default Parser\n\n"]},"metadata":{},"sourceType":"module"}