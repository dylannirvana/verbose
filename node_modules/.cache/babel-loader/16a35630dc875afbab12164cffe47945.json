{"ast":null,"code":"var _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/GridControls/FileUploader/FileUploader.js\";\nimport React from 'react';\nimport Papa from \"papaparse\"; // Render the necessary HTML for user to upload CSV file\n\nvar FileUploader = function FileUploader(props) {\n  //Takes the parsed JSON from PapaParse and updates the product filteredProducts\n  function uploadHandler(event) {\n    var inventory = event.target.files[0];\n    props.container.showSpinner();\n    Papa.parse(inventory, {\n      header: true,\n      complete: function complete(results) {\n        console.log('Total Products : ' + results.data.length);\n        props.container.initFilterFactory(results.data);\n        props.container.hideSpinner();\n      }\n    }); //Browsers do not trigger file upload, if the same file is selected more than once..\n    //Setting the value of the upload button to null overcomes this issue\n\n    event.target.value = null;\n  }\n\n  return React.createElement(\"label\", {\n    className: \"file-upload-wrapper white-button btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"file-upload-button\",\n    onChange: uploadHandler,\n    type: \"file\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"file-upload-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Select a CSV\"));\n};\n\nexport default FileUploader;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/GridControls/FileUploader/FileUploader.js"],"names":["React","Papa","FileUploader","props","uploadHandler","event","inventory","target","files","container","showSpinner","parse","header","complete","results","console","log","data","length","initFilterFactory","hideSpinner","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,IAAMC,YAAY,GAAI,SAAhBA,YAAgB,CAACC,KAAD,EAAW;AAG7B;AACA,WAASC,aAAT,CAAuBC,KAAvB,EAA6B;AACzB,QAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AAEAL,IAAAA,KAAK,CAACM,SAAN,CAAgBC,WAAhB;AAEAT,IAAAA,IAAI,CAACU,KAAL,CAAWL,SAAX,EAAsB;AAClBM,MAAAA,MAAM,EAAE,IADU;AAElBC,MAAAA,QAAQ,EAAE,kBAAUC,OAAV,EAAmB;AAEzBC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBF,OAAO,CAACG,IAAR,CAAaC,MAA/C;AAEAf,QAAAA,KAAK,CAACM,SAAN,CAAgBU,iBAAhB,CAAkCL,OAAO,CAACG,IAA1C;AAEDd,QAAAA,KAAK,CAACM,SAAN,CAAgBW,WAAhB;AAGF;AAXiB,KAAtB,EALyB,CAmBzB;AACA;;AACAf,IAAAA,KAAK,CAACE,MAAN,CAAac,KAAb,GAAqB,IAArB;AAGH;;AAKG,SAEI;AAAO,IAAA,SAAS,EAAC,sCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAE,oBAAlB;AAAwC,IAAA,QAAQ,EAAEjB,aAAlD;AAAiE,IAAA,IAAI,EAAC,MAAtE;AAA6E,IAAA,QAAQ,MAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAE,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAFJ;AASP,CA1CD;;AA4CA,eAAeF,YAAf","sourcesContent":["import React from 'react';\n\nimport Papa from \"papaparse\";\n\n// Render the necessary HTML for user to upload CSV file\nconst FileUploader =  (props) => {\n\n\n    //Takes the parsed JSON from PapaParse and updates the product filteredProducts\n    function uploadHandler(event){\n        const inventory = event.target.files[0];\n\n        props.container.showSpinner();\n\n        Papa.parse(inventory, {\n            header: true,\n            complete: function (results) {\n\n                console.log('Total Products : ' + results.data.length);\n\n                props.container.initFilterFactory(results.data);\n\n               props.container.hideSpinner();\n\n\n            }\n        });\n\n        //Browsers do not trigger file upload, if the same file is selected more than once..\n        //Setting the value of the upload button to null overcomes this issue\n        event.target.value = null;\n\n\n    }\n\n\n\n\n        return (\n\n            <label className=\"file-upload-wrapper white-button btn\">\n                <input className={\"file-upload-button\"} onChange={uploadHandler} type=\"file\" required/>\n                <span className={\"file-upload-label\"}>Select a CSV</span>\n            </label>\n\n        )\n\n}\n\nexport default FileUploader;\n\n"]},"metadata":{},"sourceType":"module"}