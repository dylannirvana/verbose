{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/App.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardBody, CardTitle, Input, InputGroup, Container, Row, // Col, \nJumbotron } from 'reactstrap';\nimport Papa from 'papaparse';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'; // NOTE: Either Integrate React with Other Libraries (jQuery) or, configure existing React / Packery to work with this application\n// import Packery from 'packery' \n// import Draggabilly from 'draggabilly'\n\nimport Draggable from 'react-draggable'; // import Packery from 'react-packery-component'\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      data: []\n    }; // State holds gridorder / neworder\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateData = _this.updateData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      event.preventDefault();\n      var inventory = event.target.files[0];\n      Papa.parse(inventory, {\n        header: true,\n        complete: this.updateData\n      });\n    } // END\n\n  }, {\n    key: \"updateData\",\n    value: function updateData(results) {\n      var data = results.data;\n      console.log(data);\n      this.setState({\n        data: data\n      }); // {data:data}\n    }\n  }, {\n    key: \"renderData\",\n    value: function renderData() {\n      var _this2 = this;\n\n      return this.state.data.length > 1 ? this.state.data.map(function (item) {\n        return (// Object in return \n          React.createElement(Draggable, {\n            axis: \"x\",\n            handle: \".handle\",\n            defaultPosition: {\n              x: 0,\n              y: 0\n            },\n            position: null,\n            grid: [25, 25],\n            scale: 1,\n            onStart: _this2.handleStart,\n            onDrag: _this2.handleDrag,\n            onStop: _this2.handleStop,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"grid-item\",\n            key: item.sku,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(Card, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, React.createElement(CardImg, {\n            src: item.image,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }), React.createElement(CardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, \" \", item.sku, \" \"), React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, \" \", item.name, \" \"))))\n        );\n      }) : null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Name:\", React.createElement(Input, {\n        type: \"file\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"album\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \" \", this.renderData(), \" \"))));\n    }\n  }]);\n\n  return App;\n}(Component); // END\n\n\nexport default App;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/App.js"],"names":["React","Component","Card","CardImg","CardBody","CardTitle","Input","InputGroup","Container","Row","Jumbotron","Papa","Draggable","App","props","state","data","handleChange","bind","updateData","event","preventDefault","inventory","target","files","parse","header","complete","results","console","log","setState","length","map","item","x","y","handleStart","handleDrag","handleStop","sku","image","name","renderData"],"mappings":"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","sourcesContent":["    import React, { Component } from 'react'\n    import { \n        Card, \n        CardImg, \n        CardBody,\n        CardTitle, \n        Input, \n        InputGroup, \n        Container, \n        Row, \n        // Col, \n        Jumbotron \n        } from 'reactstrap';\n    import Papa from 'papaparse'\n    import 'bootstrap/dist/css/bootstrap.min.css'\n    import './App.css'\n    \n    // NOTE: Either Integrate React with Other Libraries (jQuery) or, configure existing React / Packery to work with this application\n\n    // import Packery from 'packery' \n    // import Draggabilly from 'draggabilly'\n    import Draggable from 'react-draggable'\n    // import Packery from 'react-packery-component'\n\n    \n    class App extends Component {\n        constructor(props) {\n            super(props);\n            this.state = {data: [] };  // State holds gridorder / neworder\n            this.handleChange = this.handleChange.bind(this);\n            this.updateData = this.updateData.bind(this)\n        }\n        \n        handleChange(event) {\n            event.preventDefault()\n            const inventory = event.target.files[0]\n            Papa.parse(inventory, {\n                header: true,\n                complete: this.updateData\n            })\n        } // END\n\n        updateData(results) {\n            const data = results.data\n            console.log(data)\n            this.setState({data}) // {data:data}\n\n        }\n        \n        renderData() {\n            return  this.state.data.length > 1 \n               ? this.state.data.map((item) => (  // Object in return \n                <Draggable\n                axis=\"x\"\n        handle=\".handle\"\n        defaultPosition={{x: 0, y: 0}}\n        position={null}\n        grid={[25, 25]}\n        scale={1}\n        onStart={this.handleStart}\n        onDrag={this.handleDrag}\n        onStop={this.handleStop}\n        > \n                    <div className=\"grid-item\" key={item.sku}>\n                        <Card  >\n                            <CardImg src={item.image} />\n                            <CardTitle> {item.sku} </CardTitle>\n                            <CardBody> {item.name} </CardBody>\n                        </Card>  \n                    </div>\n                     \n                </Draggable>\n                    \n               )) \n               : null         \n        }\n\n        render() {\n            return (\n                <div>\n                    <Jumbotron>\n                        <form >\n                            <InputGroup>\n                                Name:\n                                <Input type=\"file\" onChange={this.handleChange} />\n                            </InputGroup>\n                        </form>\n                    </Jumbotron>\n                    \n                    <div className=\"album\">  \n                        \n\n                        <Container>           \n                            <Row className=\"grid\" > {this.renderData()} </Row> \n                        </Container>\n\n                    </div>\n                </div>          \n            );\n        }\n    } // END\n\n    export default App"]},"metadata":{},"sourceType":"module"}