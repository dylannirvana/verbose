{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/GridControls/FileUploader/FileUploader.js\";\nimport React from 'react';\nimport Papa from \"papaparse\"; // Render the necessary HTML for user to upload CSV file\n\nvar FileUploader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FileUploader, _React$Component);\n\n  function FileUploader(props) {\n    var _this;\n\n    _classCallCheck(this, FileUploader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileUploader).call(this, props));\n    _this.uploadFile = _this.uploadFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //Takes the parsed JSON from PapaParse and updates the product filteredProducts\n\n\n  _createClass(FileUploader, [{\n    key: \"uploadFile\",\n    value: function uploadFile(event) {\n      var inventory = event.target.files[0],\n          component = this;\n      document.body.classList.add('loading');\n      Papa.parse(inventory, {\n        header: true,\n        complete: function complete(results) {\n          console.log('Total Products : ' + results.data.length);\n          component.props.container.setState({\n            feed: Array.from(results.data),\n            filteredProducts: results.data,\n            packeryRefresh: true\n          });\n          document.body.classList.remove('loading');\n        }\n      }); //Browsers do not trigger file upload, if the same file is selected more than once..\n      //Setting the value of the upload button to null overcomes this issue\n\n      event.target.value = null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"label\", {\n        className: \"file-upload-wrapper white-button btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"file-upload-button\",\n        onChange: this.uploadFile,\n        type: \"file\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"file-upload-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Select a CSV\"));\n    }\n  }]);\n\n  return FileUploader;\n}(React.Component);\n\nexport { FileUploader as default };","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/GridControls/FileUploader/FileUploader.js"],"names":["React","Papa","FileUploader","props","uploadFile","bind","event","inventory","target","files","component","document","body","classList","add","parse","header","complete","results","console","log","data","length","container","setState","feed","Array","from","filteredProducts","packeryRefresh","remove","value","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;IACqBC,Y;;;;;AAEjB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;AAEA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AAHe;AAKlB,G,CAED;;;;;+BACWC,K,EAAO;AACd,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AAAA,UACIC,SAAS,GAAG,IADhB;AAEAC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,SAA5B;AACAb,MAAAA,IAAI,CAACc,KAAL,CAAWR,SAAX,EAAsB;AAClBS,QAAAA,MAAM,EAAE,IADU;AAElBC,QAAAA,QAAQ,EAAE,kBAAUC,OAAV,EAAmB;AAEzBC,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBF,OAAO,CAACG,IAAR,CAAaC,MAA/C;AAEAZ,UAAAA,SAAS,CAACP,KAAV,CAAgBoB,SAAhB,CAA0BC,QAA1B,CAAmC;AAC/BC,YAAAA,IAAI,EAAEC,KAAK,CAACC,IAAN,CAAWT,OAAO,CAACG,IAAnB,CADyB;AAE/BO,YAAAA,gBAAgB,EAAEV,OAAO,CAACG,IAFK;AAG/BQ,YAAAA,cAAc,EAAE;AAHe,WAAnC;AAMAlB,UAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBiB,MAAxB,CAA+B,SAA/B;AAGH;AAfiB,OAAtB,EAJc,CAsBd;AACA;;AACAxB,MAAAA,KAAK,CAACE,MAAN,CAAauB,KAAb,GAAqB,IAArB;AAGH;;;6BAIQ;AAEL,aAEI;AAAO,QAAA,SAAS,EAAC,sCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAE,oBAAlB;AAAwC,QAAA,QAAQ,EAAE,KAAK3B,UAAvD;AAAmE,QAAA,IAAI,EAAC,MAAxE;AAA+E,QAAA,QAAQ,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAM,QAAA,SAAS,EAAE,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,CAFJ;AAQH;;;;EAnDqCJ,KAAK,CAACgC,S;;SAA3B9B,Y","sourcesContent":["import React from 'react';\n\nimport Papa from \"papaparse\";\n\n// Render the necessary HTML for user to upload CSV file\nexport default class FileUploader extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.uploadFile = this.uploadFile.bind(this);\n\n    }\n\n    //Takes the parsed JSON from PapaParse and updates the product filteredProducts\n    uploadFile(event) {\n        const inventory = event.target.files[0],\n            component = this;\n        document.body.classList.add('loading');\n        Papa.parse(inventory, {\n            header: true,\n            complete: function (results) {\n\n                console.log('Total Products : ' + results.data.length);\n\n                component.props.container.setState({\n                    feed: Array.from(results.data),\n                    filteredProducts: results.data,\n                    packeryRefresh: true\n                });\n\n                document.body.classList.remove('loading');\n\n\n            }\n        });\n\n        //Browsers do not trigger file upload, if the same file is selected more than once..\n        //Setting the value of the upload button to null overcomes this issue\n        event.target.value = null;\n\n\n    }\n\n\n\n    render() {\n\n        return (\n\n            <label className=\"file-upload-wrapper white-button btn\">\n                <input className={\"file-upload-button\"} onChange={this.uploadFile} type=\"file\" required/>\n                <span className={\"file-upload-label\"}>Select a CSV</span>\n            </label>\n\n        )\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}