{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/GridControls/Filters/FilterContainer.js\";\nimport React from \"react\";\nimport Filter from \"./Filter\";\nimport { ButtonGroup, Container } from 'reactstrap';\n\nvar FilterContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterContainer, _React$Component);\n\n  function FilterContainer(props) {\n    var _this;\n\n    _classCallCheck(this, FilterContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterContainer).call(this, props));\n    _this.state = {\n      collapse: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /* shouldComponentUpdate() {\n         if (!this.props.container.gridPopulated()) {\n           return false;\n       }\n       return (!this.state.reload && !this.container.getAppliedFiltersCount()) ? true : this.state.reload;\n   }*/\n  //Toggle the accordion\n\n\n  _createClass(FilterContainer, [{\n    key: \"toggle\",\n    value: function toggle(event) {\n      this.setState({\n        collapse: !this.state.collapse\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //  if(this.props.container.gridPopulated() && this.props.container.getState().reloadFilters){\n      var FILTER_FACTORY = this.props.container.getFilterFactory();\n\n      if (FILTER_FACTORY.productsAvailable()) {\n        return React.createElement(Container, {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, Object.values(FILTER_FACTORY.getVisibleFilters()).map(function (filter) {\n          return React.createElement(\"div\", {\n            className: filter.filterName + '-filter',\n            key: \"accordion-\" + filter.filterName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            className: \"ui-group__title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, filter.filterName), React.createElement(ButtonGroup, {\n            className: \"filter d-block js-radio-button-group text-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(Filter, {\n            isOpen: _this2.state.collapse,\n            filter: filter,\n            filterName: filter.filterName,\n            filterOptions: filter.filterOptions,\n            selectedOption: filter.selectedOption,\n            container: _this2.props.container,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          })));\n        }));\n      }\n\n      return null;\n    }\n  }]);\n\n  return FilterContainer;\n}(React.Component);\n\nexport { FilterContainer as default };","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/GridControls/Filters/FilterContainer.js"],"names":["React","Filter","ButtonGroup","Container","FilterContainer","props","state","collapse","toggle","bind","event","setState","FILTER_FACTORY","container","getFilterFactory","productsAvailable","Object","values","getVisibleFilters","map","filter","filterName","filterOptions","selectedOption","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,YAArC;;IAEqBC,e;;;;;AAEjB,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;AAGA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAKA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,uDAAd;AATe;AAUlB;AAED;;;;;;AAUA;;;;;2BACOC,K,EAAO;AAEV,WAAKC,QAAL,CAAc;AACVJ,QAAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADZ,OAAd;AAGH;;;6BAGQ;AAAA;;AAEL;AACA,UAAMK,cAAc,GAAG,KAAKP,KAAL,CAAWQ,SAAX,CAAqBC,gBAArB,EAAvB;;AACA,UAAIF,cAAc,CAACG,iBAAf,EAAJ,EAAwC;AAIpC,eACI,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAE,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEQC,MAAM,CAACC,MAAP,CAAcL,cAAc,CAACM,iBAAf,EAAd,EAAkDC,GAAlD,CAAsD,UAAAC,MAAM;AAAA,iBACxD;AAAK,YAAA,SAAS,EAAEA,MAAM,CAACC,UAAP,GAAoB,SAApC;AAAgD,YAAA,GAAG,EAAE,eAAeD,MAAM,CAACC,UAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiCD,MAAM,CAACC,UAAxC,CADJ,EAEI,oBAAC,WAAD;AAAa,YAAA,SAAS,EAAE,kDAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGQ,oBAAC,MAAD;AAEI,YAAA,MAAM,EAAE,MAAI,CAACf,KAAL,CAAWC,QAFvB;AAGI,YAAA,MAAM,EAAEa,MAHZ;AAII,YAAA,UAAU,EAAEA,MAAM,CAACC,UAJvB;AAKI,YAAA,aAAa,EAAED,MAAM,CAACE,aAL1B;AAMI,YAAA,cAAc,EAAEF,MAAM,CAACG,cAN3B;AAOI,YAAA,SAAS,EAAE,MAAI,CAAClB,KAAL,CAAWQ,SAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR,CAFJ,CADwD;AAAA,SAA5D,CAFR,CADJ;AA2BH;;AAED,aAAO,IAAP;AAGH;;;;EAzEwCb,KAAK,CAACwB,S;;SAA9BpB,e","sourcesContent":["import React from \"react\";\nimport Filter from \"./Filter\";\nimport {ButtonGroup, Container} from 'reactstrap';\n\nexport default class FilterContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            collapse: false\n        };\n\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    /* shouldComponentUpdate() {\n\n\n         if (!this.props.container.gridPopulated()) {\n             return false;\n         }\n         return (!this.state.reload && !this.container.getAppliedFiltersCount()) ? true : this.state.reload;\n     }*/\n\n\n    //Toggle the accordion\n    toggle(event) {\n\n        this.setState({\n            collapse: !this.state.collapse\n        });\n    }\n\n\n    render() {\n\n        //  if(this.props.container.gridPopulated() && this.props.container.getState().reloadFilters){\n        const FILTER_FACTORY = this.props.container.getFilterFactory();\n        if (FILTER_FACTORY.productsAvailable()) {\n\n\n\n            return (\n                <Container className={\"text-center\"}>\n                    {\n                        Object.values(FILTER_FACTORY.getVisibleFilters()).map(filter =>\n                            <div className={filter.filterName + '-filter'}  key={\"accordion-\" + filter.filterName}>\n                                <h3 className=\"ui-group__title\">{filter.filterName}</h3>\n                                <ButtonGroup className={\"filter d-block js-radio-button-group text-center\"}>\n\n                                    {\n                                        <Filter\n\n                                            isOpen={this.state.collapse}\n                                            filter={filter}\n                                            filterName={filter.filterName}\n                                            filterOptions={filter.filterOptions}\n                                            selectedOption={filter.selectedOption}\n                                            container={this.props.container}\n\n                                        />\n                                    }\n\n                                </ButtonGroup>\n                            </div>\n                        )\n                    }\n                </Container>\n            );\n        }\n\n        return null;\n\n\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}