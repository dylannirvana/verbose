{"ast":null,"code":"var _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload.js\";\nimport React, { Component } from 'react';\nimport { Input, InputGroup } from 'reactstrap'; // import Papa from 'papaparse'\n\nimport ProductGrid from './ProductGrid.js'; // NOTE: This component shows the input, handles the upload, and exports the product object\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n// // Stateless component\n// const ProductUpload = () => {\n//     // Upload handler\n//   const uploadHandler = (event) => {\n//     const inventory = event.target.files[0]\n//     Papa.parse(inventory, {\n//       header: true,\n//       complete: function(results) {  \n//         let items = results.data;   \n//         console.log(items)\n//       }\n//     })\n//   } // END UploadHandler\n//   return (\n//     <div>\n//       <InputGroup>\n//         <Input \n//         type=\"file\" \n//         name=\"inputCSV\" \n//         onChange={uploadHandler}\n//         />\n//       </InputGroup>\n//     </div>\n//   )\n// } // END ProductUpload\n// // Stateful component\n// class ProductUpload extends Component {\n//   // constructor(props) {\n//   //   super(props);\n//   //   this.state = {\n//   //     itemList: []\n//   //   }\n//   // }\n//   render() {\n//     this.setState = {\n//       itemList: []\n//     }\n//     const uploadHandler = (event) => {\n//       const inventory = event.target.files[0]\n//       Papa.parse(inventory, {\n//         header: true,\n//         complete: function(results) {\n//           const items = results.data;   \n//           console.log(items)\n//           this.setState({ itemList: items })\n//         }\n//       })\n//     } // END UploadHandler\n//     return (\n//       <div>\n//         <InputGroup>\n//           <Input \n//           type=\"file\" \n//           name=\"inputCSV\" \n//           onChange={uploadHandler}\n//           />\n//         </InputGroup>\n//       </div>\n//     )\n//   }\n// }\n// Just the input\n\nvar ProductUpload = function ProductUpload(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"file\",\n    name: \"inputCSV\",\n    onChange: props.uploadHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })));\n};\n\nexport default ProductUpload; // TODO: export the product grid\n// const ProductExport = () => {\n// }\n// // handle the export\n// const ExportHandler = (props) => {\n// }\n// QUESTION: What about parsing the output? Isn't weird to have the input function just sitting\n// there unused when the parser does an export?\n// No, have the import handler AND the export handler here","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload.js"],"names":["React","Component","Input","InputGroup","ProductGrid","ProductUpload","props","uploadHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,YAAlC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,kBAAxB,C,CAEA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,QAAQ,EAAEA,KAAK,CAACC,aAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAWD,CAZD;;AAmBA,eAAeF,aAAf,C,CAGE;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\nimport { Input, InputGroup } from 'reactstrap'\n// import Papa from 'papaparse'\nimport ProductGrid from './ProductGrid.js'\n\n// NOTE: This component shows the input, handles the upload, and exports the product object\n\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n\n\n// // Stateless component\n// const ProductUpload = () => {\n\n//     // Upload handler\n//   const uploadHandler = (event) => {\n//     const inventory = event.target.files[0]\n\n//     Papa.parse(inventory, {\n//       header: true,\n//       complete: function(results) {  \n\n//         let items = results.data;   \n//         console.log(items)\n//       }\n//     })\n//   } // END UploadHandler\n\n//   return (\n//     <div>\n//       <InputGroup>\n//         <Input \n//         type=\"file\" \n//         name=\"inputCSV\" \n//         onChange={uploadHandler}\n//         />\n//       </InputGroup>\n//     </div>\n//   )\n\n// } // END ProductUpload\n\n\n\n// // Stateful component\n// class ProductUpload extends Component {\n//   // constructor(props) {\n//   //   super(props);\n//   //   this.state = {\n//   //     itemList: []\n//   //   }\n//   // }\n\n//   render() {\n\n//     this.setState = {\n//       itemList: []\n//     }\n\n//     const uploadHandler = (event) => {\n//       const inventory = event.target.files[0]\n  \n//       Papa.parse(inventory, {\n//         header: true,\n//         complete: function(results) {\n  \n//           const items = results.data;   \n//           console.log(items)\n//           this.setState({ itemList: items })\n//         }\n//       })\n//     } // END UploadHandler\n    \n//     return (\n//       <div>\n//         <InputGroup>\n//           <Input \n//           type=\"file\" \n//           name=\"inputCSV\" \n//           onChange={uploadHandler}\n//           />\n//         </InputGroup>\n//       </div>\n//     )\n//   }\n// }\n\n// Just the input\nconst ProductUpload = (props) => {\n  return (\n    <div>\n      <InputGroup>\n        <Input \n        type=\"file\" \n        name=\"inputCSV\" \n        onChange={props.uploadHandler}\n        />\n      </InputGroup>\n    </div>\n  )\n}\n\n\n\n\n\n\nexport default ProductUpload\n\n\n  // TODO: export the product grid\n  // const ProductExport = () => {\n\n  // }\n\n  // // handle the export\n  // const ExportHandler = (props) => {\n\n  // }\n\n  // QUESTION: What about parsing the output? Isn't weird to have the input function just sitting\n  // there unused when the parser does an export?\n  // No, have the import handler AND the export handler here\n\n"]},"metadata":{},"sourceType":"module"}