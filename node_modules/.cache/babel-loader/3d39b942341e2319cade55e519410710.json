{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/App.js\";\nimport React, { Component } from 'react'; // import GridLayout from 'react-grid-layout'\n\nimport { Card, CardImg, // CardText, \nCardBody, CardTitle, // CardSubtitle, \n// Button, \nInput, InputGroup, // Collapse, \n// Navbar, \n// NavbarToggler, \n// NavbarBrand, \n// Nav, \n// NavItem, \n// NavLink, \nContainer, Row, // Col, \nJumbotron } from 'reactstrap';\nimport Papa from 'papaparse'; // import Packery from 'react-packery-component'\n// import Masonry from 'react-masonry-component'\n\nimport Draggable from 'react-draggable';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'; // const masonryOptions = {\n//     transitionDuration: 0\n// };\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      data: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateData = _this.updateData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      event.preventDefault();\n      var inventory = event.target.files[0];\n      Papa.parse(inventory, {\n        header: true,\n        complete: this.updateData\n      });\n    } // END\n\n  }, {\n    key: \"updateData\",\n    value: function updateData(results) {\n      var data = results.data;\n      console.log(data);\n      this.setState({\n        data: data\n      }); // {data:data}\n    }\n  }, {\n    key: \"renderData\",\n    value: function renderData() {\n      return this.state.data.length > 1 ? this.state.data.map(function (item) {\n        return React.createElement(Draggable, {\n          key: item.sku,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(CardImg, {\n          src: item.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \" \", item.sku, \" \"), React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \" \", item.name, \" \"));\n      }) : null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Name:\", React.createElement(Input, {\n        type: \"file\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"album\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \" \", this.renderData(), \" \"))));\n    }\n  }]);\n\n  return App;\n}(Component); // END\n\n\nexport default App;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/App.js"],"names":["React","Component","Card","CardImg","CardBody","CardTitle","Input","InputGroup","Container","Row","Jumbotron","Papa","Draggable","App","props","state","data","handleChange","bind","updateData","event","preventDefault","inventory","target","files","parse","header","complete","results","console","log","setState","length","map","item","sku","image","name","renderData"],"mappings":"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","sourcesContent":["    import React, { Component } from 'react'\n    // import GridLayout from 'react-grid-layout'\n    import { \n        Card, \n        CardImg, \n        // CardText, \n        CardBody,\n        CardTitle, \n        // CardSubtitle, \n        // Button, \n        Input, \n        InputGroup, \n        // Collapse, \n        // Navbar, \n        // NavbarToggler, \n        // NavbarBrand, \n        // Nav, \n        // NavItem, \n        // NavLink, \n        Container, \n        Row, \n        // Col, \n        Jumbotron \n        } from 'reactstrap';\n    import Papa from 'papaparse'\n    // import Packery from 'react-packery-component'\n    // import Masonry from 'react-masonry-component'\n    import Draggable from 'react-draggable'\n    import 'bootstrap/dist/css/bootstrap.min.css'\n    import './App.css'\n\n    // const masonryOptions = {\n    //     transitionDuration: 0\n    // };\n\n    class App extends Component {\n        constructor(props) {\n            super(props);\n            this.state = {data: [] };   \n            this.handleChange = this.handleChange.bind(this);\n            this.updateData = this.updateData.bind(this)\n        }\n        \n        handleChange(event) {\n            event.preventDefault()\n            const inventory = event.target.files[0]\n            Papa.parse(inventory, {\n                header: true,\n                complete: this.updateData\n            })\n        } // END\n\n        updateData(results) {\n            const data = results.data\n            console.log(data)\n            this.setState({data}) // {data:data}\n        }\n        \n        renderData() {\n            return  this.state.data.length > 1 \n               ? this.state.data.map((item) => (\n                       <Draggable key={item.sku} >\n                            <CardImg src={item.image} />\n                            <CardTitle> {item.sku} </CardTitle>\n                            <CardBody> {item.name} </CardBody>\n                        </Draggable>\n                   \n               )) \n               : null         \n        }\n\n        render() {\n            return (\n                <div>\n                    <Jumbotron>\n                        <form >\n                            <InputGroup>\n                                Name:\n                                <Input type=\"file\" onChange={this.handleChange} />\n                            </InputGroup>\n                        </form>\n                    </Jumbotron>\n                    \n                    <div className=\"album\">\n                    \n                        <Container>\n                            \n                                <Row> {this.renderData()} </Row> \n                        </Container>\n                        {/* <Packery> {this.renderData()} </Packery> */}\n                        {/* <Masonry\n                            // className={'grid'} // default ''\n                            // elementType={'div'} // default 'div'\n                            // options={masonryOptions} // default {}\n                            // disableImagesLoaded={false} // default false\n                            // updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n                            // imagesLoadedOptions={imagesLoadedOptions} // default {}\n                        >\n                            {this.renderData()}\n                        </Masonry> */}\n                    </div>\n                </div>          \n            );\n        }\n    } // END\n\n    export default App"]},"metadata":{},"sourceType":"module"}