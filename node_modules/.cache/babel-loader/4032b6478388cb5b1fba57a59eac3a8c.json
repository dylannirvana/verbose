{"ast":null,"code":"var _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload/ProductUpload.js\";\nimport React from 'react';\nimport { Input, InputGroup } from 'reactstrap';\nimport Papa from 'papaparse'; // NOTE: This component shows the input, handles the upload, and exports the product object\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n// Stateless component\n\nvar ProductUpload = function ProductUpload(props) {\n  // Upload handler\n  var uploadHandler = function uploadHandler(event) {\n    var inventory = event.target.files[0];\n    Papa.parse(inventory, {\n      header: true,\n      complete: function complete(results) {\n        var feed = results.data;\n        console.log(feed); // I have the object but I need to be able to export it\n      }\n    });\n  }; // END UploadHandler\n\n\n  var ProductImport = function ProductImport(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"file\",\n      name: \"inputCSV\",\n      onChange: uploadHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  };\n}; // END ProductUpload\n// // Stateful component\n// class ProductUpload extends React.Component {\n//   render() {\n//     const uploadHandler = (event) => {\n//       const inventory = event.target.files[0]\n//       Papa.parse(inventory, {\n//         header: true,\n//         complete: function(results) {  \n//           let feed = results.data;   \n//           console.log(feed)\n//           // I have the object but I need to be able to export it\n//         }\n//       })\n//     } // END UploadHandler\n//     return (\n//       <div>\n//         <InputGroup>\n//           <Input \n//           type=\"file\" \n//           name=\"inputCSV\" \n//           onChange={uploadHandler}\n//           />\n//         </InputGroup>\n//       </div>\n//     )\n//   }\n// }\n// TODO: export the product grid\n// const ProductExport = () => {\n// }\n// // handle the export\n// const ExportHandler = (props) => {\n// }\n// QUESTION: What about parsing the output? Isn't weird to have the input function just sitting\n// there unused when the parser does an export?\n// No, have the import handler AND the export handler here\n\n\nexport default ProductUpload;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload/ProductUpload.js"],"names":["React","Input","InputGroup","Papa","ProductUpload","props","uploadHandler","event","inventory","target","files","parse","header","complete","results","feed","data","console","log","ProductImport"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,YAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;AAEA;AACA;AACA;AAGA;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAE7B;AACF,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,QAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AACAP,IAAAA,IAAI,CAACQ,KAAL,CAAWH,SAAX,EAAsB;AACpBI,MAAAA,MAAM,EAAE,IADY;AAEpBC,MAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AAE1B,YAAIC,IAAI,GAAGD,OAAO,CAACE,IAAnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAH0B,CAI1B;AACD;AAPmB,KAAtB;AASD,GAXD,CAH+B,CAc7B;;;AAGF,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACd,KAAD;AAAA,WACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,QAAQ,EAAEC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADoB;AAAA,GAAtB;AAUD,CA3BD,C,CA2BE;AAIF;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;;AAEA,eAAeF,aAAf","sourcesContent":["import React from 'react'\nimport { Input, InputGroup } from 'reactstrap'\nimport Papa from 'papaparse'\n\n// NOTE: This component shows the input, handles the upload, and exports the product object\n\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n\n\n// Stateless component\nconst ProductUpload = (props) => {\n\n    // Upload handler\n  const uploadHandler = (event) => {\n    const inventory = event.target.files[0]\n    Papa.parse(inventory, {\n      header: true,\n      complete: function(results) {  \n\n        let feed = results.data;   \n        console.log(feed)\n        // I have the object but I need to be able to export it\n      }\n    })\n  } // END UploadHandler\n\n\n  const ProductImport = (props) => (\n    <div>\n      <InputGroup>\n        <Input type=\"file\" name=\"inputCSV\" onChange={uploadHandler} />\n      </InputGroup>\n    </div>\n  )\n    \n  \n\n} // END ProductUpload\n\n\n\n// // Stateful component\n// class ProductUpload extends React.Component {\n//   render() {\n//     const uploadHandler = (event) => {\n//       const inventory = event.target.files[0]\n  \n//       Papa.parse(inventory, {\n//         header: true,\n//         complete: function(results) {  \n  \n//           let feed = results.data;   \n//           console.log(feed)\n//           // I have the object but I need to be able to export it\n//         }\n//       })\n//     } // END UploadHandler\n  \n//     return (\n//       <div>\n//         <InputGroup>\n//           <Input \n//           type=\"file\" \n//           name=\"inputCSV\" \n//           onChange={uploadHandler}\n//           />\n//         </InputGroup>\n//       </div>\n//     )\n//   }\n// }\n\n\n  // TODO: export the product grid\n  // const ProductExport = () => {\n\n  // }\n\n  // // handle the export\n  // const ExportHandler = (props) => {\n\n  // }\n\n  // QUESTION: What about parsing the output? Isn't weird to have the input function just sitting\n  // there unused when the parser does an export?\n  // No, have the import handler AND the export handler here\n\n  export default ProductUpload"]},"metadata":{},"sourceType":"module"}