{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload/ProductUpload.js\";\nimport React from 'react';\nimport { Input, InputGroup } from 'reactstrap';\nimport Papa from 'papaparse'; // NOTE: This component shows the input, handles the upload, and exports the product object\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n// Stateless component\n// const ProductUpload = () => {\n//   // Upload handler\n// const uploadHandler = (event) => {\n//   const inventory = event.target.files[0]\n//   Papa.parse(inventory, {\n//     header: true,\n//     complete: function(results) {  \n//       let feed = results.data;   \n//       console.log(feed)\n//       // I have the object but I need to be able to export it\n//     }\n//   })\n// } // END UploadHandler\n// return (\n//   <div>\n//     <InputGroup>\n//       <Input \n//       type=\"file\" \n//       name=\"inputCSV\" \n//       onChange={uploadHandler}\n//       />\n//     </InputGroup>\n//   </div>\n// )\n// } // END ProductUpload\n\nvar ProductUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductUpload, _React$Component);\n\n  function ProductUpload() {\n    _classCallCheck(this, ProductUpload);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProductUpload).apply(this, arguments));\n  }\n\n  _createClass(ProductUpload, [{\n    key: \"render\",\n    value: function render() {\n      var uploadHandler = function uploadHandler(event) {\n        var inventory = event.target.files[0];\n        Papa.parse(inventory, {\n          header: true,\n          complete: function complete(results) {\n            var feed = results.data;\n            console.log(feed); // I have the object but I need to be able to export it\n          }\n        });\n      }; // END UploadHandler\n\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"file\",\n        name: \"inputCSV\",\n        onChange: uploadHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ProductUpload;\n}(React.Component); // TODO: export the product grid\n// const ProductExport = () => {\n// }\n// // handle the export\n// const ExportHandler = (props) => {\n// }\n// QUESTION: What about parsing the output? Isn't weird to have the input function just sitting\n// there unused when the parser does an export?\n// No, have the import handler AND the export handler here\n\n\nexport default ProductUpload;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload/ProductUpload.js"],"names":["React","Input","InputGroup","Papa","ProductUpload","uploadHandler","event","inventory","target","files","parse","header","complete","results","feed","data","console","log","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,YAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;AAEA;AACA;AACA;AAGA;AACA;AAEE;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;;IAEMC,a;;;;;;;;;;;;;6BACK;AACP,UAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,YAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AAEAN,QAAAA,IAAI,CAACO,KAAL,CAAWH,SAAX,EAAsB;AACpBI,UAAAA,MAAM,EAAE,IADY;AAEpBC,UAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AAE1B,gBAAIC,IAAI,GAAGD,OAAO,CAACE,IAAnB;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAH0B,CAI1B;AACD;AAPmB,SAAtB;AASD,OAZD,CADO,CAaL;;;AAEF,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,QAAQ,EAAET,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAWD;;;;EA3ByBL,KAAK,CAACkB,S,GA+BhC;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;;AAEA,eAAed,aAAf","sourcesContent":["import React from 'react'\nimport { Input, InputGroup } from 'reactstrap'\nimport Papa from 'papaparse'\n\n// NOTE: This component shows the input, handles the upload, and exports the product object\n\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n\n\n// Stateless component\n// const ProductUpload = () => {\n\n  //   // Upload handler\n  // const uploadHandler = (event) => {\n  //   const inventory = event.target.files[0]\n\n  //   Papa.parse(inventory, {\n  //     header: true,\n  //     complete: function(results) {  \n\n  //       let feed = results.data;   \n  //       console.log(feed)\n  //       // I have the object but I need to be able to export it\n  //     }\n  //   })\n  // } // END UploadHandler\n\n  // return (\n  //   <div>\n  //     <InputGroup>\n  //       <Input \n  //       type=\"file\" \n  //       name=\"inputCSV\" \n  //       onChange={uploadHandler}\n  //       />\n  //     </InputGroup>\n  //   </div>\n  // )\n\n// } // END ProductUpload\n\nclass ProductUpload extends React.Component {\n  render() {\n    const uploadHandler = (event) => {\n      const inventory = event.target.files[0]\n  \n      Papa.parse(inventory, {\n        header: true,\n        complete: function(results) {  \n  \n          let feed = results.data;   \n          console.log(feed)\n          // I have the object but I need to be able to export it\n        }\n      })\n    } // END UploadHandler\n  \n    return (\n      <div>\n        <InputGroup>\n          <Input \n          type=\"file\" \n          name=\"inputCSV\" \n          onChange={uploadHandler}\n          />\n        </InputGroup>\n      </div>\n    )\n  }\n}\n\n\n  // TODO: export the product grid\n  // const ProductExport = () => {\n\n  // }\n\n  // // handle the export\n  // const ExportHandler = (props) => {\n\n  // }\n\n  // QUESTION: What about parsing the output? Isn't weird to have the input function just sitting\n  // there unused when the parser does an export?\n  // No, have the import handler AND the export handler here\n\n  export default ProductUpload"]},"metadata":{},"sourceType":"module"}