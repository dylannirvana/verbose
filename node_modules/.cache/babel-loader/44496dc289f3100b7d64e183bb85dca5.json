{"ast":null,"code":"var _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/mern/neworder/src/components/ProductFeed/ProductFeed.js\";\nimport React from 'react';\nimport { Input, InputGroup } from 'reactstrap';\nimport Papa from 'papaparse'; // import Grid from '../Grid';\n// all this does is take the input file and render it to the DOM\n\nvar ProductFeed = function ProductFeed(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"file\",\n    name: \"inputCSV\",\n    onChange: props.uploadHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })));\n};\n\nfunction uploadHandler(event) {\n  var inventory = event.target.files[0];\n  Papa.parse(inventory, {\n    header: true,\n    complete: function complete(results) {\n      var items = results.data;\n      console.log(items);\n    }\n  });\n}\n\nvar Grid = function Grid(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.someValue);\n};\n\nexport default ProductFeed; // // INITIALIZE PACKERY\n// var $grid = $('.grid').packery({\n//   itemSelector: '.grid-item',\n//   // gutter: 10,\n//   // columnWidth helps with drop positioning\n//   columnWidth: 240\n// });\n// // INITIALIZE DRAGGABILLY\n// $grid.find('.grid-item').each( function( i, gridItem ) {\n//   var draggie = new Draggabilly( gridItem );\n//   // bind drag events to Packery\n//   $grid.packery( 'bindDraggabillyEvents', draggie );\n// });\n// // // INITIALIZE ISOTOPE\n// // var $grid = $('.grid').isotope({\n// // $grid.isotope({\n// //   getSortData: {\n// //     name: '.name', // text from querySelector\n// //     category2: '.category2',\n// //     function2: '.function2',\n// //     family: '.family'\n// //     // category: '[data-category]' // value of attribute\n// //   }\n// // });","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/mern/neworder/src/components/ProductFeed/ProductFeed.js"],"names":["React","Input","InputGroup","Papa","ProductFeed","props","uploadHandler","event","inventory","target","files","parse","header","complete","results","items","data","console","log","Grid","someValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,YAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;AAEA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,QAAQ,EAAEA,KAAK,CAACC,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CARD;;AAUA,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AAEAP,EAAAA,IAAI,CAACQ,KAAL,CAAWH,SAAX,EAAsB;AACpBI,IAAAA,MAAM,EAAE,IADY;AAEpBC,IAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AAC1B,UAAMC,KAAK,GAAGD,OAAO,CAACE,IAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AALmB,GAAtB;AAOD;;AAED,IAAMI,IAAI,GAAG,SAAPA,IAAO,CAACd,KAAD;AAAA,SACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACe,SADX,CADW;AAAA,CAAb;;AAOA,eAAehB,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { Input, InputGroup } from 'reactstrap';\nimport Papa from 'papaparse';\n// import Grid from '../Grid';\n\n// all this does is take the input file and render it to the DOM\nconst ProductFeed = (props) => {\n  return (\n    <div>\n      <InputGroup>\n        <Input type=\"file\" name=\"inputCSV\" onChange={props.uploadHandler}/>\n      </InputGroup>\n    </div>\n  )\n}\n\nfunction uploadHandler(event) {\n  const inventory = event.target.files[0];\n\n  Papa.parse(inventory, {\n    header: true,\n    complete: function(results) {     \n      const items = results.data;\n      console.log(items);\n    }\n  })\n}\n\nconst Grid = (props) => (\n  <div>\n      {props.someValue}\n  </div>\n)\n\n\nexport default ProductFeed;\n\n// // INITIALIZE PACKERY\n// var $grid = $('.grid').packery({\n//   itemSelector: '.grid-item',\n//   // gutter: 10,\n//   // columnWidth helps with drop positioning\n//   columnWidth: 240\n// });\n\n// // INITIALIZE DRAGGABILLY\n// $grid.find('.grid-item').each( function( i, gridItem ) {\n//   var draggie = new Draggabilly( gridItem );\n//   // bind drag events to Packery\n//   $grid.packery( 'bindDraggabillyEvents', draggie );\n// });\n\n// // // INITIALIZE ISOTOPE\n// // var $grid = $('.grid').isotope({\n// // $grid.isotope({\n// //   getSortData: {\n// //     name: '.name', // text from querySelector\n// //     category2: '.category2',\n// //     function2: '.function2',\n// //     family: '.family'\n// //     // category: '[data-category]' // value of attribute\n// //   }\n// // });\n"]},"metadata":{},"sourceType":"module"}