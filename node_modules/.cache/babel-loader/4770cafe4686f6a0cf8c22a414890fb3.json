{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload/ProductUpload.js\";\nimport React from 'react';\nimport { Input, InputGroup } from 'reactstrap';\nimport Papa from 'papaparse'; // NOTE: This component shows the input, handles the upload, and exports the product object\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n\nvar productImport = function productImport(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"file\",\n    name: \"inputCSV\",\n    onChange: props.uploadHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })));\n};\n\nvar ProductUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductUpload, _React$Component);\n\n  function ProductUpload() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProductUpload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProductUpload)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      itemList: []\n    };\n\n    _this.uploadHandler = function (event) {\n      var inventory = event.target.files[0];\n      Papa.parse(inventory, {\n        header: true,\n        complete: function complete(results) {\n          var items = results.data;\n          this.setState({\n            itemList: items\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  return ProductUpload;\n}(React.Component);\n\nexport default ProductUpload; // // Stateless component\n// const ProductUpload = () => {\n//     // Upload handler\n//   const uploadHandler = (event) => {\n//     const inventory = event.target.files[0]\n//     Papa.parse(inventory, {\n//       header: true,\n//       complete: function(results) {  \n//         let feed = results.data;   \n//         console.log(feed)\n//         // I have the object but I need to be able to export it\n//       }\n//     })\n//   } // END UploadHandler\n//   return (\n//     <div>\n//       <InputGroup>\n//         <Input \n//         type=\"file\" \n//         name=\"inputCSV\" \n//         onChange={uploadHandler}\n//         />\n//       </InputGroup>\n//     </div>\n//   )\n// } // END ProductUpload\n// // Stateful component\n// class ProductUpload extends React.Component {\n//   render() {\n//     const uploadHandler = (event) => {\n//       const inventory = event.target.files[0]\n//       Papa.parse(inventory, {\n//         header: true,\n//         complete: function(results) {  \n//           let feed = results.data;   \n//           console.log(feed)\n//           // I have the object but I need to be able to export it\n//         }\n//       })\n//     } // END UploadHandler\n//     return (\n//       <div>\n//         <InputGroup>\n//           <Input \n//           type=\"file\" \n//           name=\"inputCSV\" \n//           onChange={uploadHandler}\n//           />\n//         </InputGroup>\n//       </div>\n//     )\n//   }\n// }\n// TODO: export the product grid\n// const ProductExport = () => {\n// }\n// // handle the export\n// const ExportHandler = (props) => {\n// }\n// QUESTION: What about parsing the output? Isn't weird to have the input function just sitting\n// there unused when the parser does an export?\n// No, have the import handler AND the export handler here","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload/ProductUpload.js"],"names":["React","Input","InputGroup","Papa","productImport","props","uploadHandler","ProductUpload","state","itemList","event","inventory","target","files","parse","header","complete","results","items","data","setState","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,YAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;AAEA;AACA;AACA;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,QAAQ,EAAEA,KAAK,CAACC,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADA;AAOD,CARD;;IAUMC,a;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;UAIRH,a,GAAgB,UAACI,KAAD,EAAW;AACzB,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AAEAV,MAAAA,IAAI,CAACW,KAAL,CAAWH,SAAX,EAAsB;AAClBI,QAAAA,MAAM,EAAE,IADU;AAElBC,QAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AACxB,cAAMC,KAAK,GAAGD,OAAO,CAACE,IAAtB;AACA,eAAKC,QAAL,CAAc;AAAEX,YAAAA,QAAQ,EAAES;AAAZ,WAAd;AACH;AALiB,OAAtB;AAOD,K;;;;;;EAfyBlB,KAAK,CAACqB,S;;AAmBlC,eAAed,aAAf,C,CAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA","sourcesContent":["import React from 'react'\nimport { Input, InputGroup } from 'reactstrap'\nimport Papa from 'papaparse'\n\n// NOTE: This component shows the input, handles the upload, and exports the product object\n\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n\nconst productImport = (props) => {\n  return (\n  <div>\n      <InputGroup>\n          <Input type=\"file\" name=\"inputCSV\" onChange={props.uploadHandler}/>\n      </InputGroup>\n  </div>\n  )\n}\n\nclass ProductUpload extends React.Component {\n  state = {\n    itemList: []\n  }\n\n  uploadHandler = (event) => {\n    const inventory = event.target.files[0];\n\n    Papa.parse(inventory, {\n        header: true,\n        complete: function(results) {\n            const items = results.data;\n            this.setState({ itemList: items })\n        }\n    })\n  }\n\n}\n\nexport default ProductUpload\n\n\n// // Stateless component\n// const ProductUpload = () => {\n\n//     // Upload handler\n//   const uploadHandler = (event) => {\n//     const inventory = event.target.files[0]\n\n//     Papa.parse(inventory, {\n//       header: true,\n//       complete: function(results) {  \n\n//         let feed = results.data;   \n//         console.log(feed)\n//         // I have the object but I need to be able to export it\n//       }\n//     })\n//   } // END UploadHandler\n\n//   return (\n//     <div>\n//       <InputGroup>\n//         <Input \n//         type=\"file\" \n//         name=\"inputCSV\" \n//         onChange={uploadHandler}\n//         />\n//       </InputGroup>\n//     </div>\n//   )\n\n// } // END ProductUpload\n\n\n// // Stateful component\n// class ProductUpload extends React.Component {\n//   render() {\n//     const uploadHandler = (event) => {\n//       const inventory = event.target.files[0]\n  \n//       Papa.parse(inventory, {\n//         header: true,\n//         complete: function(results) {  \n  \n//           let feed = results.data;   \n//           console.log(feed)\n//           // I have the object but I need to be able to export it\n//         }\n//       })\n//     } // END UploadHandler\n  \n//     return (\n//       <div>\n//         <InputGroup>\n//           <Input \n//           type=\"file\" \n//           name=\"inputCSV\" \n//           onChange={uploadHandler}\n//           />\n//         </InputGroup>\n//       </div>\n//     )\n//   }\n// }\n\n\n  // TODO: export the product grid\n  // const ProductExport = () => {\n\n  // }\n\n  // // handle the export\n  // const ExportHandler = (props) => {\n\n  // }\n\n  // QUESTION: What about parsing the output? Isn't weird to have the input function just sitting\n  // there unused when the parser does an export?\n  // No, have the import handler AND the export handler here\n\n"]},"metadata":{},"sourceType":"module"}