{"ast":null,"code":"var _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload/ProductUpload.js\";\nimport React from 'react';\nimport { Input, InputGroup } from 'reactstrap';\nimport Papa from 'papaparse'; // NOTE: This component shows the input, handles the upload, and exports the product object\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n// Imports the product feed\n\nvar ProductUpload = function ProductUpload() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"file\",\n    name: \"inputCSV\",\n    onChange: uploadHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })));\n}; // Upload handler\n\n\nvar uploadHandler = function uploadHandler(event) {\n  var inventory = event.target.files[0];\n  Papa.parse(inventory, {\n    header: true,\n    complete: function complete(results) {\n      var feed = results.data;\n      console.log(feed); // I have the object but I need to be able to export it\n\n      return function () {\n        feed = this.feed;\n      };\n    }\n  });\n  console.log(feed);\n}; // TODO: export the product grid\n// const ProductExport = () => {\n// }\n// // handle the export\n// const ExportHandler = (props) => {\n// }\n// QUESTION: What about parsing the output? Isn't weird to have the input function just sitting\n// there unused when the parser does an export?\n// No, have the import handler AND the export handler here\n\n\nexport default ProductUpload;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload/ProductUpload.js"],"names":["React","Input","InputGroup","Papa","ProductUpload","uploadHandler","event","inventory","target","files","parse","header","complete","results","feed","data","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,YAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;AAEA;AACA;AACA;AAGA;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,QAAQ,EAAEC,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAWD,CAZH,C,CAcE;;;AACF,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AAEAN,EAAAA,IAAI,CAACO,KAAL,CAAWH,SAAX,EAAsB;AACpBI,IAAAA,MAAM,EAAE,IADY;AAEpBC,IAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AAE1B,UAAIC,IAAI,GAAGD,OAAO,CAACE,IAAnB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAJ0B,CAK1B;;AAEA,aAAQ,YAAW;AACfA,QAAAA,IAAI,GAAG,KAAKA,IAAZ;AACD,OAFH;AAKD;AAdmB,GAAtB;AAgBAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,CApBD,C,CAwBE;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;;AAEA,eAAeV,aAAf","sourcesContent":["import React from 'react'\nimport { Input, InputGroup } from 'reactstrap'\nimport Papa from 'papaparse'\n\n// NOTE: This component shows the input, handles the upload, and exports the product object\n\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n\n\n// Imports the product feed\nconst ProductUpload = () => {\n    return (\n      <div>\n        <InputGroup>\n          <Input \n          type=\"file\" \n          name=\"inputCSV\" \n          onChange={uploadHandler}\n          />\n        </InputGroup>\n      </div>\n    )\n  } \n\n  // Upload handler\nconst uploadHandler = (event) => {\n  const inventory = event.target.files[0]\n\n  Papa.parse(inventory, {\n    header: true,\n    complete: function(results) {   \n\n      let feed = results.data;\n      \n      console.log(feed)\n      // I have the object but I need to be able to export it\n\n      return (function() {\n          feed = this.feed\n        }\n      )\n\n    }\n  })\n  console.log(feed)\n}\n\n\n\n  // TODO: export the product grid\n  // const ProductExport = () => {\n\n  // }\n\n  // // handle the export\n  // const ExportHandler = (props) => {\n\n  // }\n\n  // QUESTION: What about parsing the output? Isn't weird to have the input function just sitting\n  // there unused when the parser does an export?\n  // No, have the import handler AND the export handler here\n\n  export default ProductUpload"]},"metadata":{},"sourceType":"module"}