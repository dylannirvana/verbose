{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload/ProductUpload.js\";\nimport React from 'react';\nimport { Input, InputGroup } from 'reactstrap';\nimport Papa from 'papaparse'; // import Parser from '../Parser'\n\nvar ProductUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductUpload, _React$Component);\n\n  function ProductUpload(props) {\n    var _this;\n\n    _classCallCheck(this, ProductUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductUpload).call(this, props));\n\n    _this.uploadHandler = function (e) {\n      e.preventDefault();\n      var inventory = e.target.files[0];\n      Papa.parse(inventory, {\n        header: true,\n        complete: function complete(results) {\n          var items = results.data;\n          console.log(items);\n          this.setState = {\n            itemList: items\n          };\n        }\n      });\n    };\n\n    _this.state = {\n      itemList: []\n    };\n    return _this;\n  }\n\n  _createClass(ProductUpload, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"file\",\n        name: \"inputCSV\",\n        onChange: this.uploadHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ProductUpload;\n}(React.Component);\n\nexport default ProductUpload;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload/ProductUpload.js"],"names":["React","Input","InputGroup","Papa","ProductUpload","props","uploadHandler","e","preventDefault","inventory","target","files","parse","header","complete","results","items","data","console","log","setState","itemList","state","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,YAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;IAEQC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;;AADiB,UAMnBC,aANmB,GAMH,UAACC,CAAD,EAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,SAAS,GAAGF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAlB;AAEFR,MAAAA,IAAI,CAACS,KAAL,CAAWH,SAAX,EAAsB;AACpBI,QAAAA,MAAM,EAAE,IADY;AAEpBC,QAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AAC1B,cAAMC,KAAK,GAAGD,OAAO,CAACE,IAAtB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,eAAKI,QAAL,GAAgB;AACdC,YAAAA,QAAQ,EAAEL;AADI,WAAhB;AAGD;AARmB,OAAtB;AAUD,KApBoB;;AAEjB,UAAKM,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE;AADC,KAAb;AAFiB;AAKlB;;;;6BAiBQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,QAAQ,EAAE,KAAKf,aAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAWD;;;;EAnCyBN,KAAK,CAACuB,S;;AAuCpC,eAAenB,aAAf","sourcesContent":["import React from 'react'\nimport { Input, InputGroup } from 'reactstrap'\nimport Papa from 'papaparse'\n// import Parser from '../Parser'\n\n  class ProductUpload extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        itemList: []\n      }\n    }\n    uploadHandler = (e) => {\n      e.preventDefault();\n      const inventory = e.target.files[0]\n\n    Papa.parse(inventory, {\n      header: true,\n      complete: function(results) {\n        const items = results.data;   \n        console.log(items)\n        this.setState = {\n          itemList: items\n        }\n      } \n    })\n  }\n\n    render() {\n      return (\n        <div>\n          <InputGroup>\n            <Input \n            type=\"file\" \n            name=\"inputCSV\" \n            onChange={this.uploadHandler}\n            />\n          </InputGroup>\n        </div>\n      )\n    }\n  \n}\n\nexport default ProductUpload\n\n"]},"metadata":{},"sourceType":"module"}