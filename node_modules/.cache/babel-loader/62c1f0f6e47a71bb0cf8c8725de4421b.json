{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/App.js\";\nimport React, { Component } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Container, Row, Col, Jumbotron } from 'reactstrap'; // import ProductFeed from './components/ProductFeed';\n\nimport { Input, InputGroup } from 'reactstrap';\nimport Papa from 'papaparse';\n\nvar ProductImport = function ProductImport(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"file\",\n    name: \"inputCSV\",\n    onChange: props.uploadHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })));\n};\n\nvar Grid = function Grid(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.someValue);\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.uploadHandler = function (event) {\n      var inventory = event.target.files[0];\n      Papa.parse(inventory, {\n        header: true,\n        complete: function complete(results) {\n          var items = results.data;\n          console.log(items); // const map1 = items.map()\n          // var hello = document.getElementById('douche');\n          // hello.innerHTML = items;\n\n          this.setState({\n            itemList: items\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      itemList: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // constructor(props) {\n    //     super(props);\n    //     this.toggle = this.toggle.bind(this);\n    //     this.state = {\n    //         isOpen: false\n    //     };\n    // }\n    // toggle() {\n    //     this.setState({\n    //         isOpen: !this.state.isOpen\n    //     });\n    // }\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        color: \"dark\",\n        dark: true,\n        expand: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Grid Order Tool\"), React.createElement(NavbarToggler, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Collapse, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"/components/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Hello Colleen!\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"https://github.com/dylannirvana/gridorder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Github\"))))), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Import\"), React.createElement(ProductImport, {\n        uploadHandler: this.uploadHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"The Grid\"), itemList.map(function (item) {\n        return React.createElement(Grid, {\n          someValue: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        });\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/App.js"],"names":["React","Component","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Container","Row","Col","Jumbotron","Input","InputGroup","Papa","ProductImport","props","uploadHandler","Grid","someValue","App","event","inventory","target","files","parse","header","complete","results","items","data","console","log","setState","itemList","state","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Container,\n    Row,\n    Col,\n    Jumbotron,\n} from 'reactstrap';\n// import ProductFeed from './components/ProductFeed';\nimport { Input, InputGroup } from 'reactstrap';\nimport Papa from 'papaparse';\n\n\nconst ProductImport = (props) => {\n        return (\n          <div>\n            <InputGroup>\n              <Input type=\"file\" name=\"inputCSV\" onChange={props.uploadHandler}/>\n            </InputGroup>\n          </div>\n        )\n}\n\nconst Grid = (props) => (\n    <div>\n        {props.someValue}\n    </div>\n)\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { itemList: [] }\n    }\n    \n    uploadHandler = (event) => {\n        const inventory = event.target.files[0];\n    \n        Papa.parse(inventory, {\n            header: true,\n            complete: function(results) {\n                const items = results.data;\n                console.log(items);\n                // const map1 = items.map()\n                // var hello = document.getElementById('douche');\n                // hello.innerHTML = items;\n                this.setState({ itemList: items })\n            }\n        })\n    }\n\n\n    // constructor(props) {\n    //     super(props);\n\n    //     this.toggle = this.toggle.bind(this);\n    //     this.state = {\n    //         isOpen: false\n    //     };\n    // }\n    // toggle() {\n    //     this.setState({\n    //         isOpen: !this.state.isOpen\n    //     });\n    // }\n    \n    render() {\n        return (\n            <div>\n                <Navbar color=\"dark\" dark expand=\"lg\">\n                    <NavbarBrand href=\"/\">Grid Order Tool</NavbarBrand>\n                    <NavbarToggler  />\n                    <Collapse >\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink href=\"/components/\">Hello Colleen!</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"https://github.com/dylannirvana/gridorder\">Github</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n                <Jumbotron>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <h1>Import</h1>                    \n                                  <ProductImport uploadHandler = {this.uploadHandler} />                              \n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <h1>The Grid</h1>                    \n                                {/* <div id=\"douche\"/> */}\n                                {itemList.map(item => <Grid someValue={item} />)}\n                            </Col>\n                        </Row>\n                    </Container>\n                </Jumbotron>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}