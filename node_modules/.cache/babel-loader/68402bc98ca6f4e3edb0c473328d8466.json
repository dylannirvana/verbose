{"ast":null,"code":"/*!\n * docReady v1.0.3\n * Cross browser DOMContentLoaded event emitter\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true*/\n\n/*global define: false, require: false, module: false */\n(function (window) {\n  'use strict';\n\n  if (!window) return;\n  var document = window.document; // collection of functions to be triggered on ready\n\n  var queue = [];\n\n  function docReady(fn) {\n    // throw out non-functions\n    if (typeof fn !== 'function') {\n      return;\n    }\n\n    if (docReady.isReady) {\n      // ready now, hit it\n      fn();\n    } else {\n      // queue function when ready\n      queue.push(fn);\n    }\n  }\n\n  docReady.isReady = false; // triggered on various doc ready events\n\n  function init(event) {\n    // bail if IE8 document is not ready just yet\n    var isIE8NotReady = event.type === 'readystatechange' && document.readyState !== 'complete';\n\n    if (docReady.isReady || isIE8NotReady) {\n      return;\n    }\n\n    docReady.isReady = true; // process queue\n\n    for (var i = 0, len = queue.length; i < len; i++) {\n      var fn = queue[i];\n      fn();\n    }\n  }\n\n  function defineDocReady(eventie) {\n    eventie.bind(document, 'DOMContentLoaded', init);\n    eventie.bind(document, 'readystatechange', init);\n    eventie.bind(window, 'load', init);\n    return docReady;\n  } // transport\n\n\n  if (typeof exports === 'object') {\n    module.exports = defineDocReady(require('eventie'));\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    // if RequireJS, then doc is already ready\n    docReady.isReady = typeof requirejs === 'function';\n    define(['eventie/eventie'], defineDocReady);\n  } else {\n    // browser global\n    window.docReady = defineDocReady(window.eventie);\n  }\n})(typeof window !== 'undefined' ? window : null);","map":null,"metadata":{},"sourceType":"script"}