{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport { Component } from 'react';\nimport Papa from 'papaparse';\n\nvar ProductFeed =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductFeed, _Component);\n\n  function ProductFeed(props) {\n    var _this;\n\n    _classCallCheck(this, ProductFeed);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductFeed).call(this, props));\n\n    _this.uploadHandler = function (event) {\n      var inventory = event.target.files[0];\n      Papa.parse(inventory, {\n        header: true,\n        complete: function complete(results) {\n          var feed = results.data;\n          console.log(feed); // return (this.state.feed)\n        }\n      });\n    };\n\n    _this.state = {};\n    console.log(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  return ProductFeed;\n}(Component);\n\nexport default ProductFeed;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductFeed/ProductFeed.js"],"names":["Component","Papa","ProductFeed","props","uploadHandler","event","inventory","target","files","parse","header","complete","results","feed","data","console","log","state"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEQC,W;;;;;AAEJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;;AADiB,UAKnBC,aALmB,GAKH,UAACC,KAAD,EAAW;AACzB,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AAEAP,MAAAA,IAAI,CAACQ,KAAL,CAAWH,SAAX,EAAsB;AACpBI,QAAAA,MAAM,EAAE,IADY;AAEpBC,QAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AAE1B,cAAMC,IAAI,GAAGD,OAAO,CAACE,IAArB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAH0B,CAK1B;AACD;AARmB,OAAtB;AAUD,KAlBkB;;AAEjB,UAAKI,KAAL,GAAa,EAAb;AACAF,IAAAA,OAAO,CAACC,GAAR;AAHiB;AAIlB;;;EANuBhB,S;;AA0B5B,eAAeE,WAAf","sourcesContent":["import { Component } from 'react'\nimport Papa from 'papaparse'\n\n  class ProductFeed extends Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {}\n      console.log(this)\n    }\n    uploadHandler = (event) => { \n      const inventory = event.target.files[0]\n  \n      Papa.parse(inventory, {\n        header: true,\n        complete: function(results) {   \n  \n          const feed = results.data;\n          console.log(feed)\n\n          // return (this.state.feed)\n        }\n      })\n    }\n\n  }\n\n  \n    \nexport default ProductFeed;\n"]},"metadata":{},"sourceType":"module"}