{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/UploadHandler/UploadHandler.js\";\nimport React, { Component } from 'react'; // import { Input, InputGroup } from 'reactstrap'\n\nimport Papa from 'papaparse'; // import ProductGrid from '../ProductGrid'\n// NOTE: This component shows the input, handles the upload, and exports the product object\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n// // Stateless component\n// const ProductUpload = () => {\n//     // Upload handler\n//   const uploadHandler = (event) => {\n//     const inventory = event.target.files[0]\n//     Papa.parse(inventory, {\n//       header: true,\n//       complete: function(results) {  \n//         let items = results.data;   \n//         console.log(items)\n//       }\n//     })\n//   } // END UploadHandler\n//   return (\n//     <div>\n//       <InputGroup>\n//         <Input \n//         type=\"file\" \n//         name=\"inputCSV\" \n//         onChange={uploadHandler}\n//         />\n//       </InputGroup>\n//     </div>\n//   )\n// } // END ProductUpload\n// Stateful component\n\nvar UploadHandler =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadHandler, _Component);\n\n  function UploadHandler(props) {\n    var _this;\n\n    _classCallCheck(this, UploadHandler);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadHandler).call(this, props));\n    _this.state = {\n      itemList: []\n    };\n    return _this;\n  }\n\n  _createClass(UploadHandler, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state); // this renders twice, once with [], then with object\n\n      var uploadHandler = function uploadHandler(event) {\n        event.preventDefault();\n        var inventory = event.target.files[0];\n        Papa.parse(inventory, {\n          header: true,\n          complete: function (results) {\n            var items = results.data; // console.log(this.state); // undefined\n\n            this.setState({\n              itemList: items\n            });\n          }.bind(_this2) // binding was essential to this working\n\n        });\n      }; // END UploadHandler\n\n\n      console.log(typeof this.state);\n      console.log(this.itemList);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return UploadHandler;\n}(Component); // // FIXME: Just the input, uses ProductGrid for the handler\n// const UploadHandler = (props) => {\n//   return (\n//     <div>\n//       <InputGroup>\n//         <Input \n//         type=\"file\" \n//         name=\"inputCSV\" \n//         onChange={ProductGrid.uploadHandler}\n//         />\n//       </InputGroup>\n//     </div>\n//   )\n// }\n\n\nexport default UploadHandler;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/UploadHandler/UploadHandler.js"],"names":["React","Component","Papa","UploadHandler","props","state","itemList","console","log","uploadHandler","event","preventDefault","inventory","target","files","parse","header","complete","results","items","data","setState","bind"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;;IACMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAFiB;AAKlB;;;;6BAEQ;AAAA;;AAEPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB,EAFO,CAEiB;;AAExB,UAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/BA,QAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AAEAZ,QAAAA,IAAI,CAACa,KAAL,CAAWH,SAAX,EAAsB;AACpBI,UAAAA,MAAM,EAAE,IADY;AAEpBC,UAAAA,QAAQ,EAAE,UAASC,OAAT,EAAkB;AAE1B,gBAAMC,KAAK,GAAGD,OAAO,CAACE,IAAtB,CAF0B,CAG1B;;AACA,iBAAKC,QAAL,CAAc;AAAEf,cAAAA,QAAQ,EAAEa;AAAZ,aAAd;AAED,WANS,CAMRG,IANQ,CAMH,MANG,CAFU,CAQP;;AARO,SAAtB;AAUD,OAdD,CAJO,CAkBL;;;AAEFf,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAO,KAAKH,KAAxB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,QAAjB;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EAtCyBL,S,GAyC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeE,aAAf","sourcesContent":["import React, { Component } from 'react'\n// import { Input, InputGroup } from 'reactstrap'\nimport Papa from 'papaparse'\n// import ProductGrid from '../ProductGrid'\n\n// NOTE: This component shows the input, handles the upload, and exports the product object\n\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n\n\n// // Stateless component\n// const ProductUpload = () => {\n\n//     // Upload handler\n//   const uploadHandler = (event) => {\n//     const inventory = event.target.files[0]\n\n//     Papa.parse(inventory, {\n//       header: true,\n//       complete: function(results) {  \n\n//         let items = results.data;   \n//         console.log(items)\n//       }\n//     })\n//   } // END UploadHandler\n\n//   return (\n//     <div>\n//       <InputGroup>\n//         <Input \n//         type=\"file\" \n//         name=\"inputCSV\" \n//         onChange={uploadHandler}\n//         />\n//       </InputGroup>\n//     </div>\n//   )\n\n// } // END ProductUpload\n\n\n\n// Stateful component\nclass UploadHandler extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemList: []\n    }\n  }\n\n  render() {\n\n    console.log(this.state) // this renders twice, once with [], then with object\n\n    const uploadHandler = (event) => {\n      event.preventDefault();\n      const inventory = event.target.files[0]\n  \n      Papa.parse(inventory, {\n        header: true,\n        complete: function(results) {\n  \n          const items = results.data;   \n          // console.log(this.state); // undefined\n          this.setState({ itemList: items })\n\n        }.bind(this) // binding was essential to this working\n      })\n    } // END UploadHandler\n    \n    console.log(typeof(this.state))\n    console.log(this.itemList)\n\n    return (\n      <div>\n       \n       {/* { this.state.itemList } */}\n       \n      </div>\n    )\n  }\n}\n\n// // FIXME: Just the input, uses ProductGrid for the handler\n// const UploadHandler = (props) => {\n//   return (\n//     <div>\n//       <InputGroup>\n//         <Input \n//         type=\"file\" \n//         name=\"inputCSV\" \n//         onChange={ProductGrid.uploadHandler}\n//         />\n//       </InputGroup>\n//     </div>\n//   )\n// }\n\nexport default UploadHandler\n\n"]},"metadata":{},"sourceType":"module"}