{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductGrid.js\";\nimport React, { Component } from 'react';\nimport Papa from 'papaparse'; // NOTE: This component imports the product object and renders it to the grid\n// The grid template iterates through the product object\n// and makes the draggery, packery, and isotope packages available to it\n// The logic for the UI has to be taken up in a separate component\n// That component has to make clear what the logic is as it works with the taxonomy\n// What should it be called? What is purpose of that component?\n// 1. to reorder PARTS of the gridorder using the TAXONOMY rather than the numeric value of the gridorder\n// so only a subset of the products are received\n// by filter, sort, and drag, a neworder is achieved\n// 2. to teach how this is to be achieved. It has to be teachable\n// Stateful component\n\nvar ProductGrid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductGrid, _Component);\n\n  function ProductGrid(props) {\n    var _this;\n\n    _classCallCheck(this, ProductGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductGrid).call(this, props));\n\n    _this.uploadHandler = function (event) {\n      var inventory = event.target.files[0];\n      Papa.parse(inventory, {\n        header: true,\n        complete: function complete(results) {\n          var items = results.data;\n          console.log(items);\n          this.setState({\n            itemList: items\n          });\n        }\n      }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    };\n\n    _this.state = {\n      itemList: []\n    };\n    return _this;\n  }\n\n  _createClass(ProductGrid, [{\n    key: \"render\",\n    // END UploadHandler\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, itemList);\n    }\n  }]);\n\n  return ProductGrid;\n}(Component);\n\nexport default ProductGrid;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductGrid.js"],"names":["React","Component","Papa","ProductGrid","props","uploadHandler","event","inventory","target","files","parse","header","complete","results","items","data","console","log","setState","itemList","bind","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;IACMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,UAOnBC,aAPmB,GAOH,UAACC,KAAD,EAAW;AACvB,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AAEAP,MAAAA,IAAI,CAACQ,KAAL,CAAWH,SAAX,EAAsB;AAClBI,QAAAA,MAAM,EAAE,IADU;AAElBC,QAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AACxB,cAAMC,KAAK,GAAGD,OAAO,CAACE,IAAtB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,eAAKI,QAAL,CAAc;AAAEC,YAAAA,QAAQ,EAAEL;AAAZ,WAAd;AACH;AANiB,QAOpBM,IAPoB,uDAAtB;AAQC,KAlBc;;AAEf,UAAKC,KAAL,GAAa;AACTF,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFe;AAKlB;;;;AAaK;6BAEG;AAEL,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMA,QADN,CADA;AAKH;;;;EA5BqBlB,S;;AA+B1B,eAAeE,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport Papa from 'papaparse'\n\n\n// NOTE: This component imports the product object and renders it to the grid\n// The grid template iterates through the product object\n// and makes the draggery, packery, and isotope packages available to it\n\n// The logic for the UI has to be taken up in a separate component\n// That component has to make clear what the logic is as it works with the taxonomy\n// What should it be called? What is purpose of that component?\n\n// 1. to reorder PARTS of the gridorder using the TAXONOMY rather than the numeric value of the gridorder\n// so only a subset of the products are received\n// by filter, sort, and drag, a neworder is achieved\n// 2. to teach how this is to be achieved. It has to be teachable\n\n// Stateful component\nclass ProductGrid extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            itemList: []\n        }\n    }\n\n    uploadHandler = (event) => {\n        const inventory = event.target.files[0]\n    \n        Papa.parse(inventory, {\n            header: true,\n            complete: function(results) {\n                const items = results.data;   \n                console.log(items)\n                this.setState({ itemList: items })\n            }\n        }.bind(this))\n        } // END UploadHandler\n\n    render() {\n        \n        return (\n        <div>\n            { itemList }\n        </div>\n        )\n    }\n}\n\nexport default ProductGrid"]},"metadata":{},"sourceType":"module"}