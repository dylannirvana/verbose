{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/mern/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/mern/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/mern/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/mern/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from 'react';\nimport Papa from 'papaparse';\nimport ProductImport from '../ProductImport';\n\nfunction uploadHandler(event) {\n  var inventory = event.target.files[0];\n  Papa.parse(inventory, {\n    header: true,\n    complete: function complete(results) {\n      var items = results.data;\n      console.log(items); // can attach object to state, but establish it first\n      // return this.setState({ itemList: items })\n    }\n  });\n}\n\nvar ProductFeed =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductFeed, _React$Component);\n\n  function ProductFeed(props) {\n    var _this;\n\n    _classCallCheck(this, ProductFeed);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductFeed).call(this, props));\n    _this.state = {\n      itemList: []\n    };\n    return _this;\n  }\n\n  return ProductFeed;\n}(React.Component);\n\nexport default ProductFeed;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/mern/neworder/src/components/ProductFeed/ProductFeed.js"],"names":["React","Papa","ProductImport","uploadHandler","event","inventory","target","files","parse","header","complete","results","items","data","console","log","ProductFeed","props","state","itemList","Component"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AAEAN,EAAAA,IAAI,CAACO,KAAL,CAAWH,SAAX,EAAsB;AACpBI,IAAAA,MAAM,EAAE,IADY;AAEpBC,IAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AAC1B,UAAMC,KAAK,GAAGD,OAAO,CAACE,IAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAF0B,CAG1B;AACA;AACD;AAPmB,GAAtB;AAUD;;IAEKI,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAFiB;AAKlB;;;EANuBnB,KAAK,CAACoB,S;;AAahC,eAAeJ,WAAf","sourcesContent":["import React from 'react';\nimport Papa from 'papaparse';\nimport ProductImport from '../ProductImport';\n\nfunction uploadHandler(event) {\n  const inventory = event.target.files[0];\n\n  Papa.parse(inventory, {\n    header: true,\n    complete: function(results) {     \n      const items = results.data;\n      console.log(items)\n      // can attach object to state, but establish it first\n      // return this.setState({ itemList: items })\n    }\n  })\n\n}\n\nclass ProductFeed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemList: []\n    }\n  }\n\n  \n    \n\n}\n\nexport default ProductFeed;\n\n"]},"metadata":{},"sourceType":"module"}