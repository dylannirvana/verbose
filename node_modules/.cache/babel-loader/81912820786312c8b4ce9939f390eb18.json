{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/GridControls/SaveGrid.js\";\n\n/*\n* This component generates a new CSV file, based on the new order of the grid tiles\n */\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport Papa from \"papaparse\";\n\nvar SaveGrid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SaveGrid, _React$Component);\n\n  function SaveGrid(props) {\n    var _this;\n\n    _classCallCheck(this, SaveGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SaveGrid).call(this, props));\n    _this.saveNewGrid = _this.saveNewGrid.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //Generates a new CSV file, based on new order of the grid tiles\n\n\n  _createClass(SaveGrid, [{\n    key: \"saveNewGrid\",\n    value: function saveNewGrid() {\n      var newGridHTML = this.props.container.getState('packery').getItemElements();\n      var newGridJSON = [];\n      newGridHTML.forEach(function (product, index) {\n        newGridJSON.push({\n          basecode: product.getAttribute('data-sku'),\n          neworder: index + 1\n        });\n      });\n      var csv = Papa.unparse(newGridJSON),\n          csvData = new Blob([csv], {\n        type: 'text/csv;charset=utf-8;'\n      }),\n          csvURL = navigator.msSaveBlob ? navigator.msSaveBlob(csvData, 'download.csv') : window.URL.createObjectURL(csvData); //Create <a> tag, that would trigger the SAVE Dialog box, for saving the CSV\n\n      var downloadLink = document.createElement('a');\n      downloadLink.href = csvURL;\n      downloadLink.setAttribute('download', 'download.csv');\n      downloadLink.click();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Button, {\n        className: \"white-button nav-btn\",\n        onClick: this.saveNewGrid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Save Grid\");\n    }\n  }]);\n\n  return SaveGrid;\n}(React.Component);\n\nexport { SaveGrid as default };","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/GridControls/SaveGrid.js"],"names":["React","Button","Papa","SaveGrid","props","saveNewGrid","bind","newGridHTML","container","getState","getItemElements","newGridJSON","forEach","product","index","push","basecode","getAttribute","neworder","csv","unparse","csvData","Blob","type","csvURL","navigator","msSaveBlob","window","URL","createObjectURL","downloadLink","document","createElement","href","setAttribute","click","Component"],"mappings":";;;;;;;;AAAA;;;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAGqBC,Q;;;;;AACjB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AAEA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AAHe;AAIlB,G,CAGD;;;;;kCACc;AACV,UAAMC,WAAW,GAAG,KAAKH,KAAL,CAAWI,SAAX,CAAqBC,QAArB,CAA8B,SAA9B,EAAyCC,eAAzC,EAApB;AACA,UAAIC,WAAW,GAAG,EAAlB;AAEAJ,MAAAA,WAAW,CAACK,OAAZ,CAAoB,UAAUC,OAAV,EAAmBC,KAAnB,EAA0B;AAC1CH,QAAAA,WAAW,CAACI,IAAZ,CAAiB;AAACC,UAAAA,QAAQ,EAAEH,OAAO,CAACI,YAAR,CAAqB,UAArB,CAAX;AAA6CC,UAAAA,QAAQ,EAAGJ,KAAK,GAAG;AAAhE,SAAjB;AAEH,OAHD;AAKA,UAAMK,GAAG,GAAGjB,IAAI,CAACkB,OAAL,CAAaT,WAAb,CAAZ;AAAA,UACIU,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAACH,GAAD,CAAT,EAAgB;AAACI,QAAAA,IAAI,EAAE;AAAP,OAAhB,CADd;AAAA,UAEIC,MAAM,GAAGC,SAAS,CAACC,UAAV,GAAuBD,SAAS,CAACC,UAAV,CAAqBL,OAArB,EAA8B,cAA9B,CAAvB,GAAuEM,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BR,OAA3B,CAFpF,CATU,CAaV;;AACA,UAAIS,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAnB;AACAF,MAAAA,YAAY,CAACG,IAAb,GAAoBT,MAApB;AACAM,MAAAA,YAAY,CAACI,YAAb,CAA0B,UAA1B,EAAsC,cAAtC;AACAJ,MAAAA,YAAY,CAACK,KAAb;AAGH;;;6BAEQ;AAEL,aACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAE,sBAAnB;AAA2C,QAAA,OAAO,EAAE,KAAK9B,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ;AAMH;;;;EAvCiCL,KAAK,CAACoC,S;;SAAvBjC,Q","sourcesContent":["/*\n* This component generates a new CSV file, based on the new order of the grid tiles\n */\n\nimport React from 'react';\nimport {Button} from 'reactstrap';\nimport Papa from \"papaparse\";\n\n\nexport default class SaveGrid extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.saveNewGrid = this.saveNewGrid.bind(this);\n    }\n\n\n    //Generates a new CSV file, based on new order of the grid tiles\n    saveNewGrid() {\n        const newGridHTML = this.props.container.getState('packery').getItemElements();\n        let newGridJSON = [];\n\n        newGridHTML.forEach(function (product, index) {\n            newGridJSON.push({basecode: product.getAttribute('data-sku'), neworder: (index + 1)})\n\n        })\n\n        const csv = Papa.unparse(newGridJSON),\n            csvData = new Blob([csv], {type: 'text/csv;charset=utf-8;'}),\n            csvURL = navigator.msSaveBlob ? navigator.msSaveBlob(csvData, 'download.csv') : window.URL.createObjectURL(csvData);\n\n        //Create <a> tag, that would trigger the SAVE Dialog box, for saving the CSV\n        var downloadLink = document.createElement('a');\n        downloadLink.href = csvURL;\n        downloadLink.setAttribute('download', 'download.csv');\n        downloadLink.click();\n\n\n    }\n\n    render() {\n\n        return (\n            <Button className={\"white-button nav-btn\"} onClick={this.saveNewGrid}>\n                Save Grid\n            </Button>\n\n        )\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}