{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/App.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardBody, CardTitle, Input, InputGroup, Container, Row, // Col, \nJumbotron } from 'reactstrap';\nimport Papa from 'papaparse';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'; // 1. Packery implementation \n\nimport Packery from 'packery';\nimport Draggabilly from 'draggabilly'; // import Packery from 'react-packery-component'\n// import Draggable from 'react-draggable'\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      data: []\n    }; // State holds gridorder / neworder\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateData = _this.updateData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      event.preventDefault();\n      var inventory = event.target.files[0];\n      Papa.parse(inventory, {\n        header: true,\n        complete: this.updateData\n      });\n    } // END\n\n  }, {\n    key: \"updateData\",\n    value: function updateData(results) {\n      var data = results.data;\n      console.log(data);\n      this.setState({\n        data: data\n      }); // {data:data}\n    }\n  }, {\n    key: \"renderData\",\n    value: function renderData() {\n      return this.state.data.length > 1 ? this.state.data.map(function (item) {\n        return (// Object in return \n          // // 0.\n          //     <Card key={item.sku} >\n          //         <CardImg src={item.image} />\n          //         <CardTitle> {item.sku} </CardTitle>\n          //         <CardBody> {item.name} </CardBody>\n          //     </Card>   \n          // 1. adds className\n          React.createElement(Card, {\n            className: \"grid-item\",\n            key: item.sku,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, React.createElement(CardImg, {\n            src: item.image,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }), React.createElement(CardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, \" \", item.sku, \" \"), React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, \" \", item.name, \" \"))\n        );\n      }) : null;\n    } // 1. adds js\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // external js: packery.pkgd.js, draggabilly.pkgd.js\n      var pckry = new Packery('.grid', {\n        itemSelector: '.grid-item',\n        columnWidth: 100\n      });\n      pckry.getItemElements().forEach(function (itemElem) {\n        var draggie = new Draggabilly(itemElem);\n        pckry.bindDraggabillyEvents(draggie);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Name:\", React.createElement(Input, {\n        type: \"file\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"album\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" \", this.renderData(), \" \")), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \" \", this.renderData(), \" \"))));\n    }\n  }]);\n\n  return App;\n}(Component); // END\n\n\nexport default App;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/App.js"],"names":["React","Component","Card","CardImg","CardBody","CardTitle","Input","InputGroup","Container","Row","Jumbotron","Papa","Packery","Draggabilly","App","props","state","data","handleChange","bind","updateData","event","preventDefault","inventory","target","files","parse","header","complete","results","console","log","setState","length","map","item","sku","image","name","pckry","itemSelector","columnWidth","getItemElements","forEach","itemElem","draggie","bindDraggabillyEvents","renderData"],"mappings":"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","sourcesContent":["    import React, { Component } from 'react'\n    import { \n        Card, \n        CardImg, \n        CardBody,\n        CardTitle, \n        Input, \n        InputGroup, \n        Container, \n        Row, \n        // Col, \n        Jumbotron \n        } from 'reactstrap';\n    import Papa from 'papaparse'\n    import 'bootstrap/dist/css/bootstrap.min.css'\n    import './App.css'\n    \n    // 1. Packery implementation \n    import Packery from 'packery'\n    import Draggabilly from 'draggabilly'\n\n    // import Packery from 'react-packery-component'\n    // import Draggable from 'react-draggable'\n    \n\n    class App extends Component {\n        constructor(props) {\n            super(props);\n            this.state = {data: [] };  // State holds gridorder / neworder\n            this.handleChange = this.handleChange.bind(this);\n            this.updateData = this.updateData.bind(this)\n        }\n        \n        handleChange(event) {\n            event.preventDefault()\n            const inventory = event.target.files[0]\n            Papa.parse(inventory, {\n                header: true,\n                complete: this.updateData\n            })\n        } // END\n\n        updateData(results) {\n            const data = results.data\n            console.log(data)\n            this.setState({data}) // {data:data}\n        }\n        \n        renderData() {\n            return  this.state.data.length > 1 \n               ? this.state.data.map((item) => (  // Object in return \n                // // 0.\n                //     <Card key={item.sku} >\n                //         <CardImg src={item.image} />\n                //         <CardTitle> {item.sku} </CardTitle>\n                //         <CardBody> {item.name} </CardBody>\n                //     </Card>   \n\n                // 1. adds className\n                    <Card className=\"grid-item\" key={item.sku} >\n                        <CardImg src={item.image} />\n                        <CardTitle> {item.sku} </CardTitle>\n                        <CardBody> {item.name} </CardBody>\n                    </Card>    \n\n\n               )) \n               : null         \n        }\n\n        // 1. adds js\n\n\n        render() {\n\n            // external js: packery.pkgd.js, draggabilly.pkgd.js\n\n            var pckry = new Packery( '.grid', {\n                itemSelector: '.grid-item',\n                columnWidth: 100\n            });\n            \n            pckry.getItemElements().forEach( function( itemElem ) {\n                var draggie = new Draggabilly( itemElem );\n                pckry.bindDraggabillyEvents( draggie );\n            });\n  \n\n            return (\n                <div>\n                    <Jumbotron>\n                        <form >\n                            <InputGroup>\n                                Name:\n                                <Input type=\"file\" onChange={this.handleChange} />\n                            </InputGroup>\n                        </form>\n                    </Jumbotron>\n                    \n                    <div className=\"album\">  \n                    {/* 0. */}\n                        <Container>           \n                            <Row  > {this.renderData()} </Row> \n                        </Container>\n\n                    {/* 1. adds className */}\n                        <Container>           \n                            <Row className=\"grid\" > {this.renderData()} </Row> \n                        </Container>\n                    </div>\n                </div>          \n            );\n        }\n    } // END\n\n    export default App"]},"metadata":{},"sourceType":"module"}