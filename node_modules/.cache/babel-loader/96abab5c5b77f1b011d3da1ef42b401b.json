{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductGrid/ProductGrid.js\";\nimport React from 'react';\nimport Product from \"../Product/Product\"; // all this does is take the input file and render it to the DOM\n\nvar ProductGrid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductGrid, _React$Component);\n\n  function ProductGrid() {\n    _classCallCheck(this, ProductGrid);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProductGrid).apply(this, arguments));\n  }\n\n  _createClass(ProductGrid, [{\n    key: \"render\",\n    value: function render() {\n      console.log('GRID COMPONENT');\n      console.log(this.props.feed);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, Object.values(this.props.feed).map(function (product) {\n        return React.createElement(Product, {\n          key: product.sku,\n          product: product,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return ProductGrid;\n}(React.Component);\n\nexport default ProductGrid; // refactor to parent as prop?\n// // Handler Papa.parse converts CSV to JSON\n// function uploadHandler(event) {\n//   console.log('The event is registering ' + event.target) // Easy squeezy\n//   const inventory = event.target.files[0];\n//   console.log(inventory) // The array object\n//   Papa.parse(inventory, {\n//     header: true,\n//     complete: function(results) { // Object with data. Err, meta to be handled later\n//       console.log(results)\n//       // let items = results.data; // Data to be passed to Grid, iterated over, and used by Packery, Draggabilly, and Isotope\n//       // console.log(items)\n//       const Items = results.data;\n//       console.log(Items)\n//     }\n//   })\n// }\n// // INITIALIZE PACKERY\n// var $grid = $('.grid').packery({\n//   itemSelector: '.grid-item',\n//   // gutter: 10,\n//   // columnWidth helps with drop positioning\n//   columnWidth: 240\n// });\n// // INITIALIZE DRAGGABILLY\n// $grid.find('.grid-item').each( function( i, gridItem ) {\n//   var draggie = new Draggabilly( gridItem );\n//   // bind drag events to Packery\n//   $grid.packery( 'bindDraggabillyEvents', draggie );\n// });\n// // // INITIALIZE ISOTOPE\n// // var $grid = $('.grid').isotope({\n// // $grid.isotope({\n// //   getSortData: {\n// //     name: '.name', // text from querySelector\n// //     category2: '.category2',\n// //     function2: '.function2',\n// //     family: '.family'\n// //     // category: '[data-category]' // value of attribute\n// //   }\n// // });\n// import React, { Component } from 'react';\n// import { Items } from '../ProductFeed';\n// // TODO: Render items object from uploadHandler and iterate through in Bootstrap card\n// // TODO: Must be made accessible to Packery, Draggabilly \n// const Grid = () => {\n//     return (\n//         <div className=\"row grid\">\n//             <Items />\n//         </div>\n//     );\n// }\n// export default Grid;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductGrid/ProductGrid.js"],"names":["React","Product","ProductGrid","console","log","props","feed","Object","values","map","product","sku","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAEA;;IACMC,W;;;;;;;;;;;;;6BAEO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,IAAvB;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIQC,MAAM,CAACC,MAAP,CAAc,KAAKH,KAAL,CAAWC,IAAzB,EAA+BG,GAA/B,CAAmC,UAAAC,OAAO;AAAA,eAC1C,oBAAC,OAAD;AACI,UAAA,GAAG,EAAIA,OAAO,CAACC,GADnB;AAEI,UAAA,OAAO,EAAID,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD0C;AAAA,OAA1C,CAJR,CADJ;AAeH;;;;EArBqBV,KAAK,CAACY,S;;AA0BhC,eAAeV,WAAf,C,CAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport Product from \"../Product/Product\";\n\n// all this does is take the input file and render it to the DOM\nclass ProductGrid extends React.Component{\n\n    render() {\n        console.log('GRID COMPONENT')\n        console.log(this.props.feed)\n\n        return (\n            <div>\n\n               {\n\n                    Object.values(this.props.feed).map(product =>\n                    <Product\n                        key = {product.sku}\n                        product = {product}\n                    />\n                    )\n                }\n\n            </div>\n        )\n    }\n\n\n}\n\nexport default ProductGrid;\n\n// refactor to parent as prop?\n\n// // Handler Papa.parse converts CSV to JSON\n// function uploadHandler(event) {\n//   console.log('The event is registering ' + event.target) // Easy squeezy\n\n//   const inventory = event.target.files[0];\n//   console.log(inventory) // The array object\n\n//   Papa.parse(inventory, {\n//     header: true,\n//     complete: function(results) { // Object with data. Err, meta to be handled later\n//       console.log(results)\n\n//       // let items = results.data; // Data to be passed to Grid, iterated over, and used by Packery, Draggabilly, and Isotope\n//       // console.log(items)\n\n//       const Items = results.data;\n//       console.log(Items)\n//     }\n//   })\n// }\n\n\n\n// // INITIALIZE PACKERY\n// var $grid = $('.grid').packery({\n//   itemSelector: '.grid-item',\n//   // gutter: 10,\n//   // columnWidth helps with drop positioning\n//   columnWidth: 240\n// });\n\n// // INITIALIZE DRAGGABILLY\n// $grid.find('.grid-item').each( function( i, gridItem ) {\n//   var draggie = new Draggabilly( gridItem );\n//   // bind drag events to Packery\n//   $grid.packery( 'bindDraggabillyEvents', draggie );\n// });\n\n// // // INITIALIZE ISOTOPE\n// // var $grid = $('.grid').isotope({\n// // $grid.isotope({\n// //   getSortData: {\n// //     name: '.name', // text from querySelector\n// //     category2: '.category2',\n// //     function2: '.function2',\n// //     family: '.family'\n// //     // category: '[data-category]' // value of attribute\n// //   }\n// // });\n\n\n\n\n// import React, { Component } from 'react';\n// import { Items } from '../ProductFeed';\n\n// // TODO: Render items object from uploadHandler and iterate through in Bootstrap card\n// // TODO: Must be made accessible to Packery, Draggabilly \n// const Grid = () => {\n//     return (\n//         <div className=\"row grid\">\n//             <Items />\n//         </div>\n//     );\n// }\n\n// export default Grid;\n\n"]},"metadata":{},"sourceType":"module"}