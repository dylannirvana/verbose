{"ast":null,"code":"var _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/GridControls/Filters/Filter.js\";\nimport React from \"react\";\nimport { Button } from 'reactstrap';\n\nvar Filter = function Filter(props) {\n  /*\n   *  Click event handler, triggered when filter button is clicked\n   */\n  function filterClickHandler(event) {\n    var FILTER_FACTORY = props.container.getFilterFactory();\n    var FILTERED_PRODUCTS = FILTER_FACTORY.toggleFilterOption(props.filterName, event.target.textContent);\n    props.container.setState({\n      packeryRefresh: true,\n      filteredProducts: FILTERED_PRODUCTS\n    });\n  }\n\n  return Object.values(props.filterOptions).map(function (filterOption) {\n    return React.createElement(Button, {\n      color: \"warning\",\n      key: props.filterName + '-' + filterOption,\n      className: \"btn filter-option \" + (props.selectedOption === filterOption ? 'active' : ''),\n      onClick: filterClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, filterOption);\n  });\n};\n\nexport default Filter;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/GridControls/Filters/Filter.js"],"names":["React","Button","Filter","props","filterClickHandler","event","FILTER_FACTORY","container","getFilterFactory","FILTERED_PRODUCTS","toggleFilterOption","filterName","target","textContent","setState","packeryRefresh","filteredProducts","Object","values","filterOptions","map","filterOption","selectedOption"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,MAAR,QAAqB,YAArB;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAEtB;;;AAGA,WAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAE/B,QAAMC,cAAc,GAAGH,KAAK,CAACI,SAAN,CAAgBC,gBAAhB,EAAvB;AACA,QAAMC,iBAAiB,GAAGH,cAAc,CAACI,kBAAf,CAAkCP,KAAK,CAACQ,UAAxC,EAAoDN,KAAK,CAACO,MAAN,CAAaC,WAAjE,CAA1B;AAEAV,IAAAA,KAAK,CAACI,SAAN,CAAgBO,QAAhB,CAAyB;AACrBC,MAAAA,cAAc,EAAE,IADK;AAErBC,MAAAA,gBAAgB,EAAEP;AAFG,KAAzB;AAIH;;AAED,SAGIQ,MAAM,CAACC,MAAP,CAAcf,KAAK,CAACgB,aAApB,EAAmCC,GAAnC,CAAuC,UAAAC,YAAY;AAAA,WAE/C,oBAAC,MAAD;AACI,MAAA,KAAK,EAAE,SADX;AAEI,MAAA,GAAG,EAAElB,KAAK,CAACQ,UAAN,GAAmB,GAAnB,GAAyBU,YAFlC;AAGI,MAAA,SAAS,EAAE,wBAAwBlB,KAAK,CAACmB,cAAN,KAAyBD,YAAzB,GAAwC,QAAxC,GAAmD,EAA3E,CAHf;AAII,MAAA,OAAO,EAAEjB,kBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKiB,YALL,CAF+C;AAAA,GAAnD,CAHJ;AAiBH,CAjCD;;AAmCA,eAAenB,MAAf","sourcesContent":["import React from \"react\";\n\nimport {Button} from 'reactstrap';\n\n\nconst Filter = (props) => {\n\n    /*\n     *  Click event handler, triggered when filter button is clicked\n     */\n    function filterClickHandler(event) {\n\n        const FILTER_FACTORY = props.container.getFilterFactory();\n        const FILTERED_PRODUCTS = FILTER_FACTORY.toggleFilterOption(props.filterName, event.target.textContent);\n\n        props.container.setState({\n            packeryRefresh: true,\n            filteredProducts: FILTERED_PRODUCTS\n        });\n    }\n\n    return (\n\n\n        Object.values(props.filterOptions).map(filterOption =>\n\n            <Button\n                color={\"warning\"}\n                key={props.filterName + '-' + filterOption}\n                className={\"btn filter-option \" + (props.selectedOption === filterOption ? 'active' : '')}\n                onClick={filterClickHandler}>\n                {filterOption}\n            </Button>\n        )\n\n\n    );\n\n}\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}