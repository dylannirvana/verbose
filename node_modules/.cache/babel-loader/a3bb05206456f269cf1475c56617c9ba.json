{"ast":null,"code":"var _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload.js\";\nimport React from 'react';\nimport { Input, InputGroup } from 'reactstrap';\nimport UploadHandler from './UploadHandler.js'; // NOTE: This component shows the input, handles the upload, and exports the product object\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n\nvar ProductUpload = function ProductUpload() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"file\",\n    name: \"inputCSV\",\n    onChange: UploadHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })));\n}; // // Stateless component\n// const ProductUpload = () => {\n//     // Upload handler\n//   const uploadHandler = (event) => {\n//     const inventory = event.target.files[0]\n//     Papa.parse(inventory, {\n//       header: true,\n//       complete: function(results) {  \n//         let items = results.data;   \n//         console.log(feed)\n//         // I have the object but I need to be able to export it\n//       }\n//     })\n//   } // END UploadHandler\n//   return (\n//     <div>\n//       <InputGroup>\n//         <Input \n//         type=\"file\" \n//         name=\"inputCSV\" \n//         onChange={uploadHandler}\n//         />\n//       </InputGroup>\n//     </div>\n//   )\n// } // END ProductUpload\n// // Stateful component\n// class ProductUpload extends React.Component {\n//   productImport = (props) => (\n//     <div>\n//         <InputGroup>\n//           <Input \n//           type=\"file\" \n//           name=\"inputCSV\" \n//           onChange={props.uploadHandler}\n//           />\n//         </InputGroup>\n//       </div>\n//   )\n//   render() {\n//     return (\n//       <div>\n//       </div>\n//     )\n//   }\n// }\n\n\nexport default ProductUpload; // TODO: export the product grid\n// const ProductExport = () => {\n// }\n// // handle the export\n// const ExportHandler = (props) => {\n// }\n// QUESTION: What about parsing the output? Isn't weird to have the input function just sitting\n// there unused when the parser does an export?\n// No, have the import handler AND the export handler here","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload.js"],"names":["React","Input","InputGroup","UploadHandler","ProductUpload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,YAAlC;AACA,OAAOC,aAAP,MAA0B,oBAA1B,C,CAEA;AAEA;AACA;AACA;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,QAAQ,EAAED,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADN;AAWD,CAZD,C,CAqBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAeC,aAAf,C,CAGE;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA","sourcesContent":["import React from 'react'\nimport { Input, InputGroup } from 'reactstrap'\nimport UploadHandler from './UploadHandler.js'\n\n// NOTE: This component shows the input, handles the upload, and exports the product object\n\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n\n\n\nconst ProductUpload = () => {\n  return (\n        <div>\n          <InputGroup>\n            <Input \n            type=\"file\" \n            name=\"inputCSV\" \n            onChange={UploadHandler}\n            />\n          </InputGroup>\n        </div>\n      )\n}\n\n\n\n\n\n\n\n\n// // Stateless component\n// const ProductUpload = () => {\n\n//     // Upload handler\n//   const uploadHandler = (event) => {\n//     const inventory = event.target.files[0]\n\n//     Papa.parse(inventory, {\n//       header: true,\n//       complete: function(results) {  \n\n//         let items = results.data;   \n//         console.log(feed)\n//         // I have the object but I need to be able to export it\n//       }\n//     })\n//   } // END UploadHandler\n\n//   return (\n//     <div>\n//       <InputGroup>\n//         <Input \n//         type=\"file\" \n//         name=\"inputCSV\" \n//         onChange={uploadHandler}\n//         />\n//       </InputGroup>\n//     </div>\n//   )\n\n// } // END ProductUpload\n\n\n\n// // Stateful component\n// class ProductUpload extends React.Component {\n\n  \n//   productImport = (props) => (\n//     <div>\n//         <InputGroup>\n//           <Input \n//           type=\"file\" \n//           name=\"inputCSV\" \n//           onChange={props.uploadHandler}\n//           />\n//         </InputGroup>\n//       </div>\n//   )\n\n  \n\n//   render() {\n    \n//     return (\n//       <div>\n        \n//       </div>\n//     )\n//   }\n// }\n\nexport default ProductUpload\n\n\n  // TODO: export the product grid\n  // const ProductExport = () => {\n\n  // }\n\n  // // handle the export\n  // const ExportHandler = (props) => {\n\n  // }\n\n  // QUESTION: What about parsing the output? Isn't weird to have the input function just sitting\n  // there unused when the parser does an export?\n  // No, have the import handler AND the export handler here\n\n"]},"metadata":{},"sourceType":"module"}