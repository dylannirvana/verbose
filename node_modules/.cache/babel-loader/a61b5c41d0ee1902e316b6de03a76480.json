{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/mern/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/mern/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/mern/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/mern/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/mern/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/mern/neworder/src/components/Grid/Grid.js\";\nimport React, { Component } from 'react';\nimport { Items } from '../ProductFeed'; // TODO: Iterate over data in Bootstrap .row .col-md \n// TODO: Make sure that Packery, Draggabilly have access .grid .grid-item \n// And Isotope can access taxonomy\n\nvar Grid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Grid, _Component);\n\n  function Grid() {\n    _classCallCheck(this, Grid);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Grid).apply(this, arguments));\n  }\n\n  _createClass(Grid, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"row grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(Items, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Grid;\n}(Component); // import React, { Component } from 'react';\n// import ProductFeed from '../ProductFeed';\n// import './Grid.css';\n// class Grid extends Component {\n//     render() {\n//         return (\n//             <div>\n//                 <div className=\"row grid\">\n//                     <div className=\"col-md-4 grid-item\">\n//                         {items.itemcode} // out of scope. use import export objects\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n// console.log('Hey there ' + items.itemcode)\n\n\nexport default Grid;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/mern/neworder/src/components/Grid/Grid.js"],"names":["React","Component","Items","Grid"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CAEA;AACA;AACA;;IAEMC,I;;;;;;;;;;;;;6BACO;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;;;EARcF,S,GAYnB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeE,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Items } from '../ProductFeed';\n\n// TODO: Iterate over data in Bootstrap .row .col-md \n// TODO: Make sure that Packery, Draggabilly have access .grid .grid-item \n// And Isotope can access taxonomy\n\nclass Grid extends Component {\n    render() {\n\n        return (\n            <div className=\"row grid\">\n                <Items />\n            </div>\n        );\n    }\n}\n\n\n// import React, { Component } from 'react';\n// import ProductFeed from '../ProductFeed';\n// import './Grid.css';\n\n// class Grid extends Component {\n//     render() {\n//         return (\n//             <div>\n//                 <div className=\"row grid\">\n//                     <div className=\"col-md-4 grid-item\">\n//                         {items.itemcode} // out of scope. use import export objects\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n// console.log('Hey there ' + items.itemcode)\n\n\nexport default Grid;\n\n\n\n"]},"metadata":{},"sourceType":"module"}