{"ast":null,"code":"var _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/mern/neworder/src/components/ProductFeed/ProductFeed.js\";\nimport React, { Component } from 'react';\nimport { Input, InputGroup } from 'reactstrap';\nimport PapaParse from 'papaparse';\nimport './ProductFeed.css'; // const ProductFeed = () => (\n//   <div>\n//   hullo\n//   <inputGroup>\n//     <Input type=\"file\" name=\"inputCSV\" />\n//   </inputGroup>\n//   </div>\n// );\n\nvar ProductFeed = function ProductFeed() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"inputGroup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"file\",\n    name: \"inputCSV\",\n    onChange: upload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })));\n};\n\nfunction upload(event) {\n  var inventory = event.target.files[0];\n  Papa.parse(inventory, {\n    header: true,\n    complete: function complete(results) {\n      var items = results.data;\n      template.items.set(items);\n    } // END complete\n\n  }); // END parse\n}\n\nexport default ProductFeed;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/mern/neworder/src/components/ProductFeed/ProductFeed.js"],"names":["React","Component","Input","InputGroup","PapaParse","ProductFeed","upload","event","inventory","target","files","Papa","parse","header","complete","results","items","data","template","set"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,YAAlC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,mBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,QAAQ,EAAEC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADA,CADF;AAOD,CARD;;AAUA,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AAEAC,EAAAA,IAAI,CAACC,KAAL,CAAWJ,SAAX,EAAsB;AACpBK,IAAAA,MAAM,EAAE,IADY;AAEpBC,IAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AAE1B,UAAIC,KAAK,GAAGD,OAAO,CAACE,IAApB;AACAC,MAAAA,QAAQ,CAACF,KAAT,CAAeG,GAAf,CAAmBH,KAAnB;AAED,KAPmB,CAOlB;;AAPkB,GAAtB,EAHqB,CAWjB;AACL;;AAED,eAAeX,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Input, InputGroup } from 'reactstrap';\nimport PapaParse from 'papaparse';\nimport './ProductFeed.css';\n\n// const ProductFeed = () => (\n//   <div>\n//   hullo\n//   <inputGroup>\n//     <Input type=\"file\" name=\"inputCSV\" />\n//   </inputGroup>\n//   </div>\n// );\n\nconst ProductFeed = () => {\n  return (\n    <div>\n    <inputGroup>\n    <Input type=\"file\" name=\"inputCSV\" onChange={upload} />\n    </inputGroup>\n    </div>\n  )\n}\n\nfunction upload(event) {\n  const inventory = event.target.files[0];\n\n  Papa.parse(inventory, {\n    header: true,\n    complete: function(results) {\n\n      let items = results.data;\n      template.items.set(items);\n\n    } // END complete\n  }); // END parse\n}\n\nexport default ProductFeed;\n"]},"metadata":{},"sourceType":"module"}