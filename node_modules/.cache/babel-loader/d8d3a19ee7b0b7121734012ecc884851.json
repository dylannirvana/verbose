{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload.js\";\nimport React from 'react';\nimport { Input, InputGroup } from 'reactstrap';\nimport Papa from 'papaparse'; // NOTE: This component shows the input, handles the upload, and exports the product object\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n// // Stateless component\n// const ProductUpload = () => {\n//     // Upload handler\n//   const uploadHandler = (event) => {\n//     const inventory = event.target.files[0]\n//     Papa.parse(inventory, {\n//       header: true,\n//       complete: function(results) {  \n//         let items = results.data;   \n//         console.log(feed)\n//         // I have the object but I need to be able to export it\n//       }\n//     })\n//   } // END UploadHandler\n//   return (\n//     <div>\n//       <InputGroup>\n//         <Input \n//         type=\"file\" \n//         name=\"inputCSV\" \n//         onChange={uploadHandler}\n//         />\n//       </InputGroup>\n//     </div>\n//   )\n// } // END ProductUpload\n// Stateful component\n\nvar ProductUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductUpload, _React$Component);\n\n  function ProductUpload(_props) {\n    var _this;\n\n    _classCallCheck(this, ProductUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductUpload).call(this, _props));\n\n    _this.productImport = function (props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"file\",\n        name: \"inputCSV\",\n        onChange: props.uploadHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    };\n\n    state = {\n      itemList: []\n    };\n    return _this;\n  }\n\n  _createClass(ProductUpload, [{\n    key: \"render\",\n    value: function render() {\n      var uploadHandler = function uploadHandler(event) {\n        var inventory = event.target.files[0];\n        Papa.parse(inventory, {\n          header: true,\n          complete: function complete(results) {\n            var items = results.data;\n            console.log(items);\n            this.setState({\n              itemList: items\n            });\n          }\n        });\n      }; // END UploadHandler\n\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, itemList);\n    }\n  }]);\n\n  return ProductUpload;\n}(React.Component);\n\nexport default ProductUpload; // TODO: export the product grid\n// const ProductExport = () => {\n// }\n// // handle the export\n// const ExportHandler = (props) => {\n// }\n// QUESTION: What about parsing the output? Isn't weird to have the input function just sitting\n// there unused when the parser does an export?\n// No, have the import handler AND the export handler here","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload.js"],"names":["React","Input","InputGroup","Papa","ProductUpload","props","productImport","uploadHandler","state","itemList","event","inventory","target","files","parse","header","complete","results","items","data","console","log","setState","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,YAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;;IACMC,a;;;;;AAEJ,yBAAYC,MAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,MAAN;;AADiB,UAOnBC,aAPmB,GAOH,UAACD,KAAD;AAAA,aACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,QAAQ,EAAEA,KAAK,CAACE,aAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADJ,CADc;AAAA,KAPG;;AAEjBC,IAAAA,KAAK,GAAG;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAAR;AAFiB;AAKlB;;;;6BAgBQ;AAEP,UAAMF,aAAa,GAAG,SAAhBA,aAAgB,CAACG,KAAD,EAAW;AAC/B,YAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AAEAV,QAAAA,IAAI,CAACW,KAAL,CAAWH,SAAX,EAAsB;AACpBI,UAAAA,MAAM,EAAE,IADY;AAEpBC,UAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AAE1B,gBAAMC,KAAK,GAAGD,OAAO,CAACE,IAAtB;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,iBAAKI,QAAL,CAAc;AAAEb,cAAAA,QAAQ,EAAES;AAAZ,aAAd;AACD;AAPmB,SAAtB;AASD,OAZD,CAFO,CAcL;;;AAEF,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIT,QADJ,CADF;AAKD;;;;EA5CyBT,KAAK,CAACuB,S;;AA+ClC,eAAenB,aAAf,C,CAGE;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA","sourcesContent":["import React from 'react'\nimport { Input, InputGroup } from 'reactstrap'\nimport Papa from 'papaparse'\n\n// NOTE: This component shows the input, handles the upload, and exports the product object\n\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n\n\n// // Stateless component\n// const ProductUpload = () => {\n\n//     // Upload handler\n//   const uploadHandler = (event) => {\n//     const inventory = event.target.files[0]\n\n//     Papa.parse(inventory, {\n//       header: true,\n//       complete: function(results) {  \n\n//         let items = results.data;   \n//         console.log(feed)\n//         // I have the object but I need to be able to export it\n//       }\n//     })\n//   } // END UploadHandler\n\n//   return (\n//     <div>\n//       <InputGroup>\n//         <Input \n//         type=\"file\" \n//         name=\"inputCSV\" \n//         onChange={uploadHandler}\n//         />\n//       </InputGroup>\n//     </div>\n//   )\n\n// } // END ProductUpload\n\n\n\n// Stateful component\nclass ProductUpload extends React.Component {\n\n  constructor(props) {\n    super(props);\n    state = {\n      itemList: []\n    }\n  }\n\n  productImport = (props) => (\n    <div>\n        <InputGroup>\n          <Input \n          type=\"file\" \n          name=\"inputCSV\" \n          onChange={props.uploadHandler}\n          />\n        </InputGroup>\n      </div>\n  )\n\n  \n\n  render() {\n\n    const uploadHandler = (event) => {\n      const inventory = event.target.files[0]\n  \n      Papa.parse(inventory, {\n        header: true,\n        complete: function(results) {\n  \n          const items = results.data;   \n          console.log(items)\n          this.setState({ itemList: items })\n        }\n      })\n    } // END UploadHandler\n    \n    return (\n      <div>\n        { itemList }\n      </div>\n    )\n  }\n}\n\nexport default ProductUpload\n\n\n  // TODO: export the product grid\n  // const ProductExport = () => {\n\n  // }\n\n  // // handle the export\n  // const ExportHandler = (props) => {\n\n  // }\n\n  // QUESTION: What about parsing the output? Isn't weird to have the input function just sitting\n  // there unused when the parser does an export?\n  // No, have the import handler AND the export handler here\n\n"]},"metadata":{},"sourceType":"module"}