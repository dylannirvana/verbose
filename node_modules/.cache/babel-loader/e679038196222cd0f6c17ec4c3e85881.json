{"ast":null,"code":"var _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload/ProductUpload.js\";\nimport React from 'react'; // import React, { Component } from 'react'\n\nimport { Input, InputGroup } from 'reactstrap'; // import Papa from 'papaparse'\n// import ProductGrid from '../ProductGrid'\n\nimport UploadHandler from '../UploadHandler'; // NOTE: This component shows the input, handles the upload, and exports the product object\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n// // Stateless component\n// const ProductUpload = () => {\n//     // Upload handler\n//   const uploadHandler = (event) => {\n//     const inventory = event.target.files[0]\n//     Papa.parse(inventory, {\n//       header: true,\n//       complete: function(results) {  \n//         let items = results.data;   \n//         console.log(items)\n//       }\n//     })\n//   } // END UploadHandler\n//   return (\n//     <div>\n//       <InputGroup>\n//         <Input \n//         type=\"file\" \n//         name=\"inputCSV\" \n//         onChange={uploadHandler}\n//         />\n//       </InputGroup>\n//     </div>\n//   )\n// } // END ProductUpload\n// // Stateful component\n// class ProductUpload extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       itemList: []\n//     }\n//   }\n// // state = {\n// //   itemList: []\n// // }\n//   render() {\n//     console.log(this.state) // this renders twice, once with [], then with object\n//     const uploadHandler = (event) => {\n//       event.preventDefault();\n//       const inventory = event.target.files[0]\n//       Papa.parse(inventory, {\n//         header: true,\n//         complete: function(results) {\n//           const items = results.data;   \n//           // console.log(this.state); // undefined\n//           this.setState({ itemList: items })\n//         }.bind(this) // binding was essential to this working\n//       })\n//     } // END UploadHandler\n//     console.log(typeof(this.state))\n//     console.log(this.itemList)\n//     return (\n//       <div>\n//         <InputGroup>\n//           <Input \n//           type=\"file\" \n//           name=\"inputCSV\" \n//           onChange={uploadHandler}\n//           />\n//         </InputGroup>\n//       </div>\n//     )\n//   }\n// }\n// FIXME: Just the input, uses ProductGrid for the handler\n\nvar ProductUpload = function ProductUpload(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"file\",\n    name: \"inputCSV\",\n    onChange: props.UploadHandler.uploadHandler // ?\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })));\n};\n\nexport default ProductUpload;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/ProductUpload/ProductUpload.js"],"names":["React","Input","InputGroup","UploadHandler","ProductUpload","props","uploadHandler"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,YAAlC,C,CACA;AACA;;AACA,OAAOC,aAAP,MAA0B,kBAA1B,C,CAEA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,QAAQ,EAAEA,KAAK,CAACF,aAAN,CAAoBG,aAH9B,CAG6C;AAH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAWD,CAZD;;AAcA,eAAeF,aAAf","sourcesContent":["import React from 'react'\n// import React, { Component } from 'react'\nimport { Input, InputGroup } from 'reactstrap'\n// import Papa from 'papaparse'\n// import ProductGrid from '../ProductGrid'\nimport UploadHandler from '../UploadHandler'\n\n// NOTE: This component shows the input, handles the upload, and exports the product object\n\n// Here are some inspiring comments from https://react.org \n// \"We recommend naming props from the component’s own point of view rather than the context in which it is being used.\"\n// \"All React components must act like pure functions with respect to their props.\"\n\n\n// // Stateless component\n// const ProductUpload = () => {\n\n//     // Upload handler\n//   const uploadHandler = (event) => {\n//     const inventory = event.target.files[0]\n\n//     Papa.parse(inventory, {\n//       header: true,\n//       complete: function(results) {  \n\n//         let items = results.data;   \n//         console.log(items)\n//       }\n//     })\n//   } // END UploadHandler\n\n//   return (\n//     <div>\n//       <InputGroup>\n//         <Input \n//         type=\"file\" \n//         name=\"inputCSV\" \n//         onChange={uploadHandler}\n//         />\n//       </InputGroup>\n//     </div>\n//   )\n\n// } // END ProductUpload\n\n\n\n// // Stateful component\n// class ProductUpload extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       itemList: []\n//     }\n//   }\n\n// // state = {\n// //   itemList: []\n// // }\n\n//   render() {\n\n//     console.log(this.state) // this renders twice, once with [], then with object\n\n//     const uploadHandler = (event) => {\n//       event.preventDefault();\n//       const inventory = event.target.files[0]\n  \n//       Papa.parse(inventory, {\n//         header: true,\n//         complete: function(results) {\n  \n//           const items = results.data;   \n//           // console.log(this.state); // undefined\n//           this.setState({ itemList: items })\n\n//         }.bind(this) // binding was essential to this working\n//       })\n//     } // END UploadHandler\n\n//     console.log(typeof(this.state))\n//     console.log(this.itemList)\n\n//     return (\n//       <div>\n//         <InputGroup>\n//           <Input \n//           type=\"file\" \n//           name=\"inputCSV\" \n//           onChange={uploadHandler}\n//           />\n//         </InputGroup>\n//       </div>\n//     )\n//   }\n// }\n\n// FIXME: Just the input, uses ProductGrid for the handler\nconst ProductUpload = (props) => {\n  return (\n    <div>\n      <InputGroup>\n        <Input \n        type=\"file\" \n        name=\"inputCSV\" \n        onChange={props.UploadHandler.uploadHandler} // ?\n        />\n      </InputGroup>\n    </div>\n  )\n}\n\nexport default ProductUpload\n\n"]},"metadata":{},"sourceType":"module"}