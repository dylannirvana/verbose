{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/App.js\";\n\nimport React, { Component } from 'react';\nimport { // Card, \n// CardImg, \n// CardText, \n// CardBody,\n// CardTitle, \n// CardSubtitle, \n// Button, \nInput, InputGroup, Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Container, Row, Col, Jumbotron } from 'reactstrap';\nimport Papa from 'papaparse';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'; // const ItemCard = (props) => {\n//     return (\n//         <Row>\n//             <Col>\n//                 <Card  >\n//                     <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\" alt=\"Card image cap\" />\n//                     <CardBody>\n//                         <CardTitle>Card title </CardTitle>\n//                         <CardSubtitle>Card subtitle</CardSubtitle>\n//                         <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n//                         <Button>Button</Button>\n//                     </CardBody>\n//                 </Card>\n//             </Col>\n//             {/* <Col>\n//                 <Card>\n//                     <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\" alt=\"Card image cap\" />\n//                     <CardBody>\n//                         <CardTitle>Card title</CardTitle>\n//                         <CardSubtitle>Card subtitle</CardSubtitle>\n//                         <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n//                         <Button>Button</Button>\n//                     </CardBody>\n//                 </Card>\n//             </Col>\n//             <Col>\n//                 <Card>\n//                     <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\" alt=\"Card image cap\" />\n//                     <CardBody>\n//                         <CardTitle>Card title</CardTitle>\n//                         <CardSubtitle>Card subtitle</CardSubtitle>\n//                         <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n//                         <Button>Button</Button>\n//                     </CardBody>\n//                 </Card>\n//             </Col> */}\n//         </Row>\n//     );\n//   };\n\nvar Grid = function Grid(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, _this.props.value);\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this2.uploadHandler = function (e) {\n      e.preventDefault();\n      var inventory = e.target.files[0];\n      Papa.parse(inventory, {\n        header: true,\n        complete: function complete(results) {\n          var items = results.data;\n          console.log(items); // I have access to the data\n          // this.setState({itemList: items}) // TypeError: this.setState is not a function\n        }\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        color: \"dark\",\n        dark: true,\n        expand: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Grid Order Tool\"), React.createElement(NavbarToggler, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Collapse, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"/components/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Hello Colleen!\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"https://github.com/dylannirvana/gridorder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Github\"))))), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Import\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"file\",\n        value: this.props.value,\n        name: \"inputCSV\",\n        onChange: this.uploadHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"The Grid\"), React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/App.js"],"names":["React","Component","Input","InputGroup","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Container","Row","Col","Jumbotron","Papa","Grid","props","value","App","uploadHandler","e","preventDefault","inventory","target","files","parse","header","complete","results","items","data","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { \n    // Card, \n    // CardImg, \n    // CardText, \n    // CardBody,\n    // CardTitle, \n    // CardSubtitle, \n    // Button, \n    Input, \n    InputGroup, \n    Collapse, \n    Navbar, \n    NavbarToggler, \n    NavbarBrand, \n    Nav, \n    NavItem, \n    NavLink, \n    Container, \n    Row, \n    Col, \n    Jumbotron \n    } from 'reactstrap';\nimport Papa from 'papaparse'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\n\n// const ItemCard = (props) => {\n//     return (\n//         <Row>\n//             <Col>\n//                 <Card  >\n//                     <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\" alt=\"Card image cap\" />\n//                     <CardBody>\n//                         <CardTitle>Card title </CardTitle>\n//                         <CardSubtitle>Card subtitle</CardSubtitle>\n//                         <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n//                         <Button>Button</Button>\n//                     </CardBody>\n//                 </Card>\n//             </Col>\n//             {/* <Col>\n//                 <Card>\n//                     <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\" alt=\"Card image cap\" />\n//                     <CardBody>\n//                         <CardTitle>Card title</CardTitle>\n//                         <CardSubtitle>Card subtitle</CardSubtitle>\n//                         <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n//                         <Button>Button</Button>\n//                     </CardBody>\n//                 </Card>\n//             </Col>\n//             <Col>\n//                 <Card>\n//                     <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\" alt=\"Card image cap\" />\n//                     <CardBody>\n//                         <CardTitle>Card title</CardTitle>\n//                         <CardSubtitle>Card subtitle</CardSubtitle>\n//                         <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n//                         <Button>Button</Button>\n//                     </CardBody>\n//                 </Card>\n//             </Col> */}\n//         </Row>\n//     );\n//   };\n\nconst Grid = (props) => (\n    <div>\n        {this.props.value}\n    </div>\n)\n    \nclass App extends Component {\n    // constructor(props) {\n    //     super(props)\n    //     // this.state = {\n    //     //     itemList: []\n    //     // }\n    // }\n\n    uploadHandler = (e) => {\n        e.preventDefault();\n        const inventory = e.target.files[0]\n        Papa.parse(inventory, {\n          header: true,\n          complete: function(results) {\n            let items = results.data\n            console.log(items) // I have access to the data\n        \n            // this.setState({itemList: items}) // TypeError: this.setState is not a function\n          }\n        })\n      }\n\n    render() {\n        return (\n            <div>\n                <Navbar color=\"dark\" dark expand=\"lg\">\n                    <NavbarBrand href=\"/\">Grid Order Tool</NavbarBrand>\n                    <NavbarToggler  />\n                    <Collapse >\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink href=\"/components/\">Hello Colleen!</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"https://github.com/dylannirvana/gridorder\">Github</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n                <Jumbotron>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <h1>Import</h1>                    \n                                <InputGroup>\n                                    <Input type=\"file\" value={this.props.value} name=\"inputCSV\" onChange={this.uploadHandler} />\n                                </InputGroup>                          \n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <h1>The Grid</h1>  \n                                <Grid />\n                            </Col>\n                        </Row>\n                    </Container>\n                </Jumbotron>\n            </div>\n        );\n    }\n}\n    export default App;\n"]},"metadata":{},"sourceType":"module"}