{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/App.js\";\n\n/*\n* Entry point for the App\n */\nimport React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport ProductGrid from './components/ProductGrid/ProductGrid';\nimport './App.scss';\nimport FilterFactory from \"./components/GridControls/Filters/FilterFactory\";\nimport GridControls from \"./components/GridControls\";\nimport { Container, Jumbotron } from 'reactstrap';\nimport loaderIcon from './images/loader.gif';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    var component = _assertThisInitialized(_assertThisInitialized(_this));\n\n    _this.state = {\n      feed: [],\n      //The  parsed JSON obtained from PapaParse\n      filteredProducts: [],\n      // filtered filteredProducts\n      filterFactory: undefined,\n      packeryRefresh: false,\n      /// whether packery should be refreshed\n      packery: false,\n      //Reference to the Packery Instance\n      dragableComponents: [] //Array of dragable product components\n\n    }; //Container allows the child components to manage the state of the GridOrder component\n\n    _this.container = {\n      //Functions for managing state\n      getState: function getState(state) {\n        return state !== undefined ? component.state[state] : component.state;\n      },\n      setState: function setState(state) {\n        if (component.state.filterFactory === undefined) {\n          component.state.filterFactory = new FilterFactory(state.feed, state.filteredProducts);\n          component.state.filterFactory.updateVisibleFilters();\n        }\n\n        component.setState(state);\n      },\n      //Indicates if the filteredProducts has been populated with data\n      gridPopulated: function gridPopulated() {\n        return Boolean(component.state.feed.length);\n      },\n      getFilterFactory: function getFilterFactory() {\n        //   console.log(component.state.filterFactory)\n        return component.state.filterFactory;\n      },\n      getFilteredProducts: function getFilteredProducts() {\n        //console.log(component.state.filteredProducts)\n        return component.state.filteredProducts;\n      }\n    };\n    return _possibleConstructorReturn(_this, _assertThisInitialized(_assertThisInitialized(_this)));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"page\",\n        className: !this.container.getState('feed').length ? 'no-grid' : 'product-grid-loaded',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: loaderIcon,\n        id: \"loader-icon\",\n        style: {\n          display: 'none'\n        },\n        alt: \"Loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Header, {\n        container: this.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        id: \"app-intro\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"jumbotron-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Grid Order App\"), React.createElement(\"p\", {\n        className: \"lead text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"))), React.createElement(GridControls, {\n        container: this.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(ProductGrid, {\n        container: this.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/App.js"],"names":["React","Component","Header","ProductGrid","FilterFactory","GridControls","Container","Jumbotron","loaderIcon","App","props","component","state","feed","filteredProducts","filterFactory","undefined","packeryRefresh","packery","dragableComponents","container","getState","setState","updateVisibleFilters","gridPopulated","Boolean","length","getFilterFactory","getFilteredProducts","display"],"mappings":"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","sourcesContent":["/*\n* Entry point for the App\n */\n\nimport React, {Component} from 'react';\n\n\nimport Header from './components/Header/Header';\nimport ProductGrid from './components/ProductGrid/ProductGrid';\nimport './App.scss';\nimport FilterFactory from \"./components/GridControls/Filters/FilterFactory\";\nimport GridControls from \"./components/GridControls\";\nimport {Container, Jumbotron} from 'reactstrap';\nimport loaderIcon from './images/loader.gif';\n\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        const component = this;\n\n        this.state = {\n            feed: [], //The  parsed JSON obtained from PapaParse\n            filteredProducts: [], // filtered filteredProducts\n            filterFactory: undefined,\n\n\n            packeryRefresh: false, /// whether packery should be refreshed\n            packery: false, //Reference to the Packery Instance\n            dragableComponents: [] //Array of dragable product components\n        };\n\n        //Container allows the child components to manage the state of the GridOrder component\n        this.container = {\n\n            //Functions for managing state\n            getState: function (state) {\n                return state !== undefined ? component.state[state] : component.state\n            },\n\n            setState: function (state) {\n\n                if(component.state.filterFactory === undefined){\n                    component.state.filterFactory = new FilterFactory(state.feed,state.filteredProducts);\n                    component.state.filterFactory.updateVisibleFilters();\n                }\n\n\n                component.setState(state);\n            },\n\n\n            //Indicates if the filteredProducts has been populated with data\n            gridPopulated: function () {\n                return Boolean(component.state.feed.length);\n            },\n\n            getFilterFactory: function () {\n             //   console.log(component.state.filterFactory)\n                return component.state.filterFactory;\n            },\n            getFilteredProducts: function(){\n                //console.log(component.state.filteredProducts)\n                return component.state.filteredProducts;\n            }\n\n\n        }\n\n        return this;\n    }\n\n\n    render() {\n\n        return (\n            <div id={\"page\"} className={!this.container.getState('feed').length ? 'no-grid' : 'product-grid-loaded'}>\n\n                <img src={loaderIcon} id=\"loader-icon\" style={{display: 'none'}} alt=\"Loading\"/>\n                <Header container={this.container}/>\n\n                <Jumbotron  id=\"app-intro\" className={\"text-center\"}>\n                    <Container>\n                        <h1 className={\"jumbotron-heading\"}>Grid Order App</h1>\n                        <p className={\"lead text-muted\"}>\n                            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                        </p>\n                    </Container>\n                </Jumbotron>\n\n                {/*Render the controls for controlling the product filteredProducts*/}\n                <GridControls container={this.container}/>\n\n                <ProductGrid container={this.container}/>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}