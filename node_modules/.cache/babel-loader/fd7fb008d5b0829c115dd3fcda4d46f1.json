{"ast":null,"code":"import _classCallCheck from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uxdev/Documents/code/gridOrder/react/neworder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/UploadHandler.js\";\nimport React, { Component } from 'react';\nimport Papa from 'papaparse';\nimport ProductGrid from './ProductGrid'; // const UploadHandler = (event) => {\n//     const inventory = event.target.files[0]\n//     Papa.parse(inventory, {\n//       header: true,\n//       complete: function(results) {\n//         const items = results.data;   \n//         console.log(items)\n//       }\n//     })\n//   } // END UploadHandler\n\nvar UploadHandler =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadHandler, _Component);\n\n  function UploadHandler(props) {\n    var _this;\n\n    _classCallCheck(this, UploadHandler);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadHandler).call(this, props));\n\n    _this.parser = function (event) {\n      var inventory = event.target.files[0];\n      Papa.parse(inventory, {\n        header: true,\n        complete: function complete(results) {\n          var items = results.data;\n          console.log(items);\n          setState({\n            itemList: items\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      itemList: []\n    };\n    return _this;\n  }\n\n  _createClass(UploadHandler, [{\n    key: \"render\",\n    // END parser\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, itemList.map(function (item) {\n        return React.createElement(ProductGrid, {\n          someValue: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return UploadHandler;\n}(Component); // END UploadHandler\n\n\nexport default UploadHandler;","map":{"version":3,"sources":["/Users/uxdev/Documents/code/gridOrder/react/neworder/src/components/UploadHandler.js"],"names":["React","Component","Papa","ProductGrid","UploadHandler","props","parser","event","inventory","target","files","parse","header","complete","results","items","data","console","log","setState","itemList","state","map","item"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;IAIMC,a;;;;;AAEF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;;AADe,UAOnBC,MAPmB,GAOV,UAACC,KAAD,EAAW;AAChB,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlB;AAEAR,MAAAA,IAAI,CAACS,KAAL,CAAWH,SAAX,EAAsB;AAClBI,QAAAA,MAAM,EAAE,IADU;AAElBC,QAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AACxB,cAAMC,KAAK,GAAGD,OAAO,CAACE,IAAtB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAI,UAAAA,QAAQ,CAAC;AAAEC,YAAAA,QAAQ,EAAEL;AAAZ,WAAD,CAAR;AACH;AANiB,OAAtB;AAQH,KAlBkB;;AAEf,UAAKM,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFe;AAKlB;;;;AAaC;6BAEO;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,QAAQ,CAACE,GAAT,CAAa,UAAAC,IAAI;AAAA,eAAI,oBAAC,WAAD;AAAa,UAAA,SAAS,EAAEA,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAAjB,CADL,CADJ;AAKH;;;;EA5BuBtB,S,GA8B1B;;;AAEF,eAAeG,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport Papa from 'papaparse'\nimport ProductGrid from './ProductGrid'\n\n\n// const UploadHandler = (event) => {\n//     const inventory = event.target.files[0]\n\n//     Papa.parse(inventory, {\n//       header: true,\n//       complete: function(results) {\n\n//         const items = results.data;   \n//         console.log(items)\n//       }\n//     })\n//   } // END UploadHandler\n\n\n\nclass UploadHandler extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            itemList: []\n        }\n    }\n    \n    parser = (event) => {\n        const inventory = event.target.files[0]\n\n        Papa.parse(inventory, {\n            header: true,\n            complete: function(results) {\n                const items = results.data\n                console.log(items)\n                setState({ itemList: items })\n            }\n        })\n    } // END parser\n\n    render() {\n        return (\n            <div>\n               { itemList.map(item => <ProductGrid someValue={item}/>) }\n            </div>\n        )\n    }\n\n} // END UploadHandler\n\nexport default UploadHandler\n"]},"metadata":{},"sourceType":"module"}