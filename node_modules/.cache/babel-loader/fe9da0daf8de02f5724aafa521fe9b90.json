{"ast":null,"code":"var isBrowser = typeof window !== 'undefined';\nvar Packery = isBrowser ? window.Packery || require('packery') : null;\nvar imagesloaded = isBrowser ? require('imagesloaded') : null;\nvar refName = 'packeryContainer';\n\nfunction PackeryComponent(React) {\n  return React.createClass({\n    packery: false,\n    displayName: 'PackeryComponent',\n    propTypes: {\n      disableImagesLoaded: React.PropTypes.bool,\n      options: React.PropTypes.object\n    },\n    getDefaultProps: function getDefaultProps() {\n      return {\n        disableImagesLoaded: false,\n        options: {},\n        className: '',\n        elementType: 'div'\n      };\n    },\n    initializePackery: function initializePackery(force) {\n      if (!this.packery || force) {\n        this.packery = new Packery(this.refs[refName], this.props.options);\n      }\n    },\n    imagesLoaded: function imagesLoaded() {\n      if (this.props.disableImagesLoaded) return;\n      imagesloaded(this.refs[refName], function (instance) {\n        this.packery.layout();\n      }.bind(this));\n    },\n    componentDidMount: function componentDidMount() {\n      this.initializePackery();\n      this.imagesLoaded();\n    },\n    componentDidUpdate: function componentDidUpdate() {\n      this.initializePackery(true);\n      this.imagesLoaded();\n      this.packery.reloadItems();\n    },\n    render: function render() {\n      return React.createElement(this.props.elementType, {\n        className: this.props.className,\n        ref: refName\n      }, this.props.children);\n    }\n  });\n}\n\nmodule.exports = PackeryComponent;","map":null,"metadata":{},"sourceType":"script"}